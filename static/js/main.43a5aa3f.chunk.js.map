{"version":3,"sources":["components/label/Label.tsx","api/feature/FeatureApi.ts","context.ts","pages/feature/view/Detail.tsx","components/input/Input.tsx","pages/feature/create/Create.tsx","api/feature-process/FeatureProcessApi.ts","pages/feature/search/Search.tsx","pages/feature/view/List.tsx","pages/feature/edit/Edit.tsx","pages/feature-process/view/List.tsx","pages/feature-process/view/Detail.tsx","pages/feature-process/create/Create.tsx","App.tsx","serviceWorker.ts","i18n.js","index.tsx"],"names":["StyledLabel","styled","label","Label","props","children","API_URL","getFeature","id","url","axios","defaults","withCredentials","get","then","response","data","catch","reason","console","log","Promise","reject","deleteFeature","featureId","resolve","delete","headers","status","error","getResultSetSize","searchId","SearchContext","React","createContext","DetailPage","history","useHistory","useParams","useState","mainTabSelected","setMainTabSelected","currentFeature","setCurrentFeature","searchContext","useContext","t","useTranslation","useEffect","feature","selected","onClick","push","disabled","getSearch","style","width","textAlign","featureStatus","name","featureName","featureNameEn","dateIns","toString","Date","toLocaleDateString","description","author","responsible","StyledInput","input","CreatePage","onSubmit","post","location","createFeature","formik","useFormik","initialValues","values","button","document","getElementById","click","handleSubmit","Input","value","onChange","handleChange","type","hidden","deleteFeatureProcess","featureProcessId","getFeatureStatusOptions","SearchPage","statusOptions","setStatusOptions","undefined","dateInsFrom","dateInsTo","searchRequest","split","pop","postSearchRequest","template","resultSize","setSearch","alert","options","autoComplete","featureNameTemplate","featureNameEnTemplate","date","setFieldValue","statusCodeList","multiple","map","option","key","ListPage","useLocation","query","URLSearchParams","search","searchSize","setSearchSize","pageSize","parseInt","page","features","setFeatures","find","searchFeatures","onDoubleClick","currentPage","rowCount","totalRowCount","onRefresh","pageNumber","pathname","EditPage","put","updateFeature","enableReinitialize","defaultValue","FeatureProcessListPage","featureProcesses","setFeatureProcesses","current","setCurrent","findFeatureProcess","processes","featureProcess","featureStatusName","FeatureProcessDetailPage","setFeatureProcess","getFeatureProcess","FeatureProcessCreatePage","featureProcessCreate","createFeatureProcess","featureStatusCode","goBack","Loader","Main","i18n","language","window","setSearchId","searchFeature","changeLanguage","Provider","basename","process","path","exact","component","App","fallback","Boolean","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.43a5aa3f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface LabelInterface extends React.LabelHTMLAttributes<HTMLLabelElement>{\r\n}\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  text-align: right;\r\n  width: 200px;\r\n  min-width: 200px;\r\n  padding-right: 5px;\r\n  //float: left;\r\n  //vertical-align: middle;\r\n`;\r\n\r\nconst Label: React.FC<LabelInterface> = (props) => {\r\n  return (\r\n      <StyledLabel {...props}>{props.children}</StyledLabel>\r\n  );\r\n}\r\n\r\nexport default Label;","import axios from 'axios';\r\nimport {Feature, FeatureCreate, FeatureSearchTemplate, FeatureUpdate} from \"./FeatureInterface\";\r\nimport {SearchRequest} from \"../types\";\r\n\r\nconst API_URL = 'https://jepria-spring-feature.herokuapp.com';\r\nconst USER = 'user';\r\nconst PASSWORD = '123';\r\nconst withCredentials = false;\r\n\r\nexport const getFeature = (id?: string): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${id}/`;\r\n  // console.log(`${}`)\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n      .get(\r\n          url,\r\n          // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n      )\r\n      .then(\r\n          response => response.data\r\n      )\r\n      .catch(reason => {\r\n        console.log(reason);\r\n        return Promise.reject(reason);\r\n      });\r\n}\r\n\r\nexport const createFeature = (feature: FeatureCreate): Promise<Feature> => {\r\n  const url = `${API_URL}/feature`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios.post(\r\n        url,\r\n        feature,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (201 === response.status) {\r\n        let location: string = response.headers['location'];\r\n        console.log(\"location\" + location);\r\n        axios.get(\r\n            location,\r\n            {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                'Accept': 'application/json;charset=utf-8',\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              }\r\n            }\r\n        ).then(response => {\r\n          if (200 === response.status) {\r\n            resolve(response.data);\r\n          } else {\r\n            reject(response);\r\n          }\r\n        }).catch(error => reject(error));\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const updateFeature = (featureId: string, feature: FeatureUpdate): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${featureId}/`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios.put(\r\n        url,\r\n        feature,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (200 === response.status) {\r\n        resolve();\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const deleteFeature = (featureId: string): Promise<void> => {\r\n  const url = `${API_URL}/feature/${featureId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios.delete(\r\n        url,\r\n        {\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (200 === response.status) {\r\n        resolve();\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const postSearchRequest = (searchRequest: SearchRequest<FeatureSearchTemplate>) => {\r\n  const url = `${API_URL}/feature/search`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  console.log(searchRequest)\r\n  return new Promise<string>((resolve, reject) => {\r\n    axios.post(\r\n        url,\r\n        searchRequest,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Cache-Control': 'no-cache'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (201 === response.status) {\r\n        let location: string = response.headers['location'];\r\n        console.log(response)\r\n        resolve(location.split('/').pop());\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const searchFeatures = (searchId: string, pageSize: number, page: number): Promise<Array<Feature>> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset?pageSize=${pageSize}&page=${page}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<Array<Feature>>((resolve, reject) => {\r\n    axios.get(\r\n        url,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Cache-Control': 'no-cache'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (200 === response.status) {\r\n        resolve(response.data);\r\n      } else if (204 === response.status) {\r\n        resolve([]);\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const getResultSetSize = (searchId: string): Promise<number> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset-size`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<number>((resolve, reject) => {\r\n    axios.get(\r\n        url,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Cache-Control': 'no-cache'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (200 === response.status) {\r\n        resolve(response.data);\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}","import React from \"react\";\r\n\r\nexport interface SearchContextInterface {\r\n  getSearch(): string,\r\n  setSearch(searchId: string): void\r\n}\r\n\r\nexport const SearchContext = React.createContext<SearchContextInterface | null>(null);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form } from \"jfront-components\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport { deleteFeature, getFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DetailPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(true);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const searchContext = useContext(SearchContext);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab\r\n          selected={mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(true);\r\n          }}\r\n        >\r\n          {t(\"feature.header\")}\r\n        </Tab>\r\n        <Tab\r\n          selected={!mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(false);\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}\r\n        >\r\n          {t(\"feature-process.header\")}\r\n        </Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave disabled={true} />\r\n        <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)} />\r\n        <ToolbarButtonDelete\r\n          onClick={() => {\r\n            if (featureId) {\r\n              deleteFeature(featureId).then(() => {\r\n                let searchId = searchContext?.getSearch();\r\n                if (searchId) {\r\n                  history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n                } else {\r\n                  history.push(`/`);\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            } else {\r\n              history.push(\"/\");\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureId}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureStatus\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureName}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureNameEn}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateIns\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.dateIns.toString() ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString() : \"\"}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.description\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.description}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.author\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>Порядок выполнения:</Label>\r\n          <Label />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.responsible\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Label>\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledInput = styled.input`\r\n  width: 200px;\r\n`;\r\n\r\n\r\nexport default StyledInput;","import React, {useContext} from \"react\";\r\nimport {Form} from \"jfront-components\";\r\nimport Input from \"../../../components/input\";\r\nimport {FormField} from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {FeatureCreate} from \"../../../api/feature/FeatureInterface\";\r\nimport {createFeature} from \"../../../api/feature/FeatureApi\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {SearchContext} from \"../../../context\";\r\nimport {useFormik} from \"formik\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst CreatePage = () => {\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  const {t} = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureCreate) => {\r\n    createFeature(data).then((feature) => {\r\n      history.push(`/${feature.featureId}/detail`);\r\n    })\r\n  };\r\n\r\n  const formik = useFormik<FeatureCreate>({\r\n    initialValues: {\r\n      description: \"\",\r\n      featureName: \"\",\r\n      featureNameEn: \"\",\r\n    },\r\n    onSubmit: (values: FeatureCreate) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={true}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate disabled={true}/>\r\n          <ToolbarButtonSave onClick={() => {\r\n            let button = document.getElementById(\"create-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}/>\r\n          <ToolbarButtonEdit disabled={true}/>\r\n          <ToolbarButtonDelete disabled={true}/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`)\r\n            }\r\n          }}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form id=\"create-form\" onSubmit={formik.handleSubmit}>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n            <Input name=\"featureName\" value={formik.values.featureName} onChange={formik.handleChange}/>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n            <Input name=\"featureNameEn\" value={formik.values.featureNameEn} onChange={formik.handleChange}/>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.description\")}:</Label>\r\n            <textarea name=\"description\" value={formik.values.description} onChange={formik.handleChange}/>\r\n          </FormField>\r\n          <FormField>\r\n            <Input id=\"create-submit\" type=\"submit\" hidden={true}/>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default CreatePage;","import axios from 'axios';\r\nimport {\r\n  FeatureProcess,\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions\r\n} from \"./FeatureProcessInterface\";\r\n\r\nconst API_URL = 'https://jepria-spring-feature.herokuapp.com';\r\nconst USER = 'user';\r\nconst PASSWORD = '123';\r\nconst withCredentials = false;\r\n\r\nexport const findFeatureProcess = (featureId: number): Promise<FeatureProcess[]> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n      .get(\r\n          url,\r\n          // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n      )\r\n      .then(\r\n          response => response.data\r\n      )\r\n      .catch(reason => {\r\n        console.log(reason);\r\n        return Promise.reject(reason);\r\n      });\r\n}\r\n\r\nexport const createFeatureProcess = (featureId: number, featureProcessCreate: FeatureProcessCreate):\r\n    Promise<FeatureProcess> => {\r\n\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<FeatureProcess>((resolve, reject) => {\r\n    axios.post(\r\n        url,\r\n        featureProcessCreate,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (response.status === 201) {\r\n        let location: string = response.headers['location'];\r\n        console.log(\"location\" + location);\r\n        axios.get(\r\n            location,\r\n            {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                'Accept': 'application/json;charset=utf-8',\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              }\r\n            }\r\n        ).then(response => {\r\n          if (200 === response.status) {\r\n            resolve(response.data);\r\n          } else {\r\n            reject(response);\r\n          }\r\n        }).catch(error => reject(error));\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const getFeatureProcess = (featureId: number, featureProcessId: string): Promise<FeatureProcess> => {\r\n\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n      .get(\r\n          url,\r\n          {\r\n            // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n            headers: {\r\n              'Accept': 'application/json;charset=utf-8',\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n          }\r\n      )\r\n      .then(\r\n          response => response.data\r\n      )\r\n      .catch(reason => {\r\n        console.log(reason)\r\n        return Promise.reject(reason);\r\n      })\r\n}\r\n\r\nexport const deleteFeatureProcess = (featureId: number, featureProcessId: number): Promise<void> => {\r\n\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios.delete(\r\n        url,\r\n        {\r\n          // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n          headers: {\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n          }\r\n        }\r\n    ).then(response => {\r\n      if (200 === response.status) {\r\n        resolve();\r\n      } else {\r\n        reject(response);\r\n      }\r\n    }).catch(error => reject(error));\r\n  });\r\n}\r\n\r\nexport const getFeatureStatusOptions = (): Promise<FeatureStatusOptions[]> => {\r\n\r\n  const url = `${API_URL}/feature/option/feature-status`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n      .get(\r\n          url,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;charset=utf-8',\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n          },\r\n      ).then(\r\n          response => response.data\r\n      ).catch(reason => {\r\n        console.log(reason);\r\n        return Promise.reject(reason);\r\n      });\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Form} from \"jfront-components\";\r\nimport {FormField} from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport Input from \"../../../components/input\";\r\nimport {getResultSetSize, postSearchRequest} from \"../../../api/feature/FeatureApi\";\r\nimport {SearchRequest} from \"../../../api/types\";\r\nimport {FeatureSearchTemplate} from \"../../../api/feature/FeatureInterface\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {SearchContext} from \"../../../context\";\r\nimport {FeatureStatusOptions} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {getFeatureStatusOptions} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {useFormik} from \"formik\";\r\nimport {DatePicker} from \"jfront-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst SearchPage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n\r\n  const onSubmit = (data: FeatureSearchTemplate) => {\r\n\r\n    if (!data.featureId) {\r\n      data.featureId = undefined;\r\n    }\r\n    if (!data.dateInsFrom) {\r\n      data.dateInsFrom = undefined;\r\n    }\r\n    if (!data.dateInsTo) {\r\n      data.dateInsTo = undefined;\r\n    }\r\n\r\n    let searchRequest: SearchRequest<FeatureSearchTemplate> = {template: data};\r\n\r\n    postSearchRequest(searchRequest).then((searchId) => {\r\n      getResultSetSize(searchId).then(resultSize => {\r\n        if (resultSize > 0) {\r\n          searchContext?.setSearch(searchId);\r\n          history.push(`/list/${searchId}/?pageSize=25&page=1`)\r\n        } else {\r\n          alert(\"Search empty!\")\r\n        }\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n    });\r\n  }, [])\r\n\r\n  const formik = useFormik<FeatureSearchTemplate>({\r\n    initialValues: {},\r\n    onSubmit: (values: FeatureSearchTemplate) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={true}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)}/>\r\n          <ToolbarButtonSave disabled={true}/>\r\n          <ToolbarButtonEdit disabled={true}/>\r\n          <ToolbarButtonDelete disabled={true}/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase disabled={!searchContext?.getSearch()} onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`)\r\n            }\r\n          }}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}/>\r\n          <ToolbarButtonBase onClick={() => {\r\n            let button = document.getElementById(\"search-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n            <Input name=\"featureId\" value={formik.values.featureId} onChange={formik.handleChange}\r\n                   type=\"number\" autoComplete=\"off\"/>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.featureNameTemplate\")}:</Label>\r\n            <Input name=\"featureNameTemplate\" value={formik.values.featureNameTemplate}\r\n                   onChange={formik.handleChange} autoComplete=\"off\"\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.featureNameEnTemplate\")}:</Label>\r\n            <Input name=\"featureNameEnTemplate\" value={formik.values.featureNameEnTemplate}\r\n                   onChange={formik.handleChange} autoComplete=\"off\"/>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.dateInsFrom\")}:</Label>\r\n            <DatePicker\r\n                name=\"dateInsFrom\"\r\n                selected={formik.values.dateInsFrom}\r\n                onChange={(date) => {\r\n                  formik.setFieldValue(\"dateInsFrom\", date)\r\n                }}\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.dateInsTo\")}:</Label>\r\n            <DatePicker\r\n                name=\"dateInsTo\"\r\n                selected={formik.values.dateInsTo}\r\n                onChange={(date) => {\r\n                  formik.setFieldValue(\"dateInsTo\", date)\r\n                }}\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature.fields.statusCodeList\")}</Label>\r\n            <select name=\"statusCodeList\" value={formik.values.statusCodeList}\r\n                    onChange={formik.handleChange} multiple={true}>\r\n              <option value={undefined}></option>\r\n              {statusOptions ? statusOptions.map(option => {\r\n                return <option key={option.value} value={option.value}>{option.name}</option>\r\n              }) : null}\r\n            </select>\r\n          </FormField>\r\n          <FormField>\r\n            <Input id=\"search-submit\" type=\"submit\" hidden={true}/>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default SearchPage;","import React, { useEffect, useState } from \"react\";\r\nimport { Feature } from \"../../../api/feature/FeatureInterface\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteFeature,\r\n  getResultSetSize,\r\n  searchFeatures,\r\n} from \"../../../api/feature/FeatureApi\";\r\nimport {\r\n  JepGrid as Grid,\r\n  JepGridTable as Table,\r\n  JepGridHeaderCell as TableHeaderCell,\r\n  JepGridHeader as TableHeader,\r\n  JepGridBody as TableBody,\r\n  JepGridRow as TableRow,\r\n  JepGridRowCell as TableColumn,\r\n  JepGridPagingBar,\r\n} from \"jfront-components\";\r\nimport { Page, Content, Header } from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst ListPage = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { searchId } = useParams();\r\n  let query = useQuery();\r\n  const [searchSize, setSearchSize] = useState<number>(25);\r\n  const pageSize: number = parseInt(query.get(\"pageSize\") as string);\r\n  const page: number = parseInt(query.get(\"page\") as string);\r\n  const [features, setFeatures] = useState<Feature[]>([]);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n\r\n  const find = () => {\r\n    if (searchId) {\r\n      getResultSetSize(searchId).then((resultSize) => {\r\n        setSearchSize(resultSize);\r\n        if (searchId) {\r\n          searchFeatures(searchId, pageSize, page).then((features) => {\r\n            setFeatures(features);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    find();\r\n  }, [location]);\r\n\r\n  return (\r\n    <Page>\r\n      <Header>\r\n        <TabPanel>\r\n          <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n          <ToolbarButtonSave disabled={true} />\r\n          <ToolbarButtonEdit\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/edit`)}\r\n          />\r\n          <ToolbarButtonDelete\r\n            disabled={!currentFeature}\r\n            onClick={() => {\r\n              if (currentFeature) {\r\n                deleteFeature(currentFeature.featureId.toString()).then(() => {\r\n                  find();\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <ToolbarButtonView\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/detail`)}\r\n          />\r\n          <ToolbarSplitter />\r\n          <ToolbarButtonBase disabled={true}>\r\n            {t(\"toolbar.list\")}\r\n          </ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n          <ToolbarButtonBase disabled={true}>\r\n            {t(\"toolbar.find\")}\r\n          </ToolbarButtonBase>\r\n        </Toolbar>\r\n      </Header>\r\n      <Content>\r\n        <Grid>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableHeaderCell>{t(\"feature.fields.featureId\")}</TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.workSequence\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureStatus\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureName\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureNameEn\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.description\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>{t(\"feature.fields.dateIns\")}</TableHeaderCell>\r\n              <TableHeaderCell>{t(\"feature.fields.author\")}</TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.responsible\")}\r\n              </TableHeaderCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {features\r\n                ? features.map((feature) => {\r\n                    return (\r\n                      <TableRow\r\n                        key={feature.featureId}\r\n                        selected={feature === currentFeature}\r\n                        onClick={() => {\r\n                          setCurrentFeature(feature);\r\n                        }}\r\n                        onDoubleClick={() => {\r\n                          history.push(`/${feature.featureId}/detail`);\r\n                        }}\r\n                      >\r\n                        <TableColumn label={t(\"feature.fields.featureId\")}>\r\n                          {feature.featureId}\r\n                        </TableColumn>\r\n                        <TableColumn\r\n                          label={t(\"feature.fields.workSequence\")}\r\n                        ></TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureStatus\")}>\r\n                          {feature.featureStatus?.name}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureName\")}>\r\n                          {feature.featureName}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureNameEn\")}>\r\n                          {feature.featureNameEn}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.description\")}>\r\n                          {feature.description}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.dateIns\")}>\r\n                          {new Date(feature.dateIns.toString()).toLocaleDateString()}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.author\")}>\r\n                          {feature.author?.name}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.responsible\")}>\r\n                          {feature.responsible?.name}\r\n                        </TableColumn>\r\n                      </TableRow>\r\n                    );\r\n                  })\r\n                : null}\r\n            </TableBody>\r\n          </Table>\r\n          <JepGridPagingBar\r\n            currentPage={page}\r\n            rowCount={pageSize}\r\n            totalRowCount={searchSize}\r\n            onRefresh={(pageNumber, pageSize) => {\r\n              history.push({\r\n                pathname: `/list/${searchId}`,\r\n                search: `?page=${pageNumber}&pageSize=${pageSize}`,\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Content>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form } from \"jfront-components\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport Input from \"../../../components/input\";\r\nimport { getFeature, updateFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature, FeatureUpdate } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const searchContext = useContext(SearchContext);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureUpdate) => {\r\n    if (featureId) {\r\n      updateFeature(featureId.toString(), data).then(() => {\r\n        history.push(`/${featureId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik<FeatureUpdate>({\r\n    initialValues: {\r\n      featureName: currentFeature?.featureName\r\n        ? currentFeature?.featureName\r\n        : \"\",\r\n      featureNameEn: currentFeature?.featureNameEn\r\n        ? currentFeature?.featureNameEn\r\n        : \"\",\r\n      description: currentFeature?.description\r\n        ? currentFeature?.description\r\n        : \"\",\r\n    },\r\n    onSubmit: (values: FeatureUpdate) => {\r\n      onSubmit(values);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave\r\n          onClick={() => {\r\n            let button = document.getElementById(\"edit-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete />\r\n        <ToolbarButtonView\r\n          onClick={() => history.push(`/${featureId}/detail`)}\r\n        />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form id=\"edit-form\" onSubmit={formik.handleSubmit}>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureId}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureStatus\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureName}\r\n            name=\"featureName\"\r\n            value={formik.values.featureName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureNameEn}\r\n            name=\"featureNameEn\"\r\n            value={formik.values.featureNameEn}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateIns\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.dateIns.toString() ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString() : \"\"}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.description\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.description}\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.author\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.responsible\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Input id=\"edit-submit\" type=\"submit\" hidden={true} />\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  JepGrid as Grid,\r\n  JepGridTable as Table,\r\n  JepGridHeaderCell as TableHeaderCell,\r\n  JepGridHeader as TableHeader,\r\n  JepGridBody as TableBody,\r\n  JepGridRow as TableRow,\r\n  JepGridRowCell as TableColumn,\r\n} from \"jfront-components\";\r\nimport {FeatureProcess} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  findFeatureProcess\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessListPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcesses, setFeatureProcesses] = useState<FeatureProcess[]>();\r\n  const [current, setCurrent] = useState<FeatureProcess>();\r\n  let {featureId} = useParams();\r\n  const {t} = useTranslation();\r\n\r\n  const find = () => {\r\n    if (featureId) {\r\n      findFeatureProcess(parseInt(featureId)).then((processes: FeatureProcess[]) => {\r\n        setFeatureProcesses(processes);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    find()\r\n  }, [location]);\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            setMainTabSelected(true)\r\n            history.push(`/${featureId}/detail`);\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected} onClick={() => {\r\n            setMainTabSelected(false);\r\n          }}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate\r\n              onClick={() => history.push(`/${featureId}/feature-process/create`)}/>\r\n          <ToolbarButtonDelete disabled={!current} onClick={() => {\r\n            if (current?.featureId && current.featureProcessId) {\r\n              deleteFeatureProcess(current?.featureId, current?.featureProcessId).then(() => {\r\n                find();\r\n              });\r\n            }\r\n          }}/>\r\n          <ToolbarButtonView disabled={!current}\r\n                             onClick={() => history.push(`/${current?.featureId}/feature-process/${current?.featureProcessId}/detail`)}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}\r\n                             onClick={() => history.push(`/${featureId}/feature-process/search`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Grid>\r\n          <Table>\r\n            <TableHeader>\r\n                <TableHeaderCell>{t(\"feature-process.fields.featureStatusName\")}</TableHeaderCell>\r\n                <TableHeaderCell>{t(\"feature-process.fields.dateIns\")}</TableHeaderCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {featureProcesses ? featureProcesses.map(featureProcess => {\r\n                return (\r\n                    <TableRow\r\n                        key={featureProcess.featureProcessId}\r\n                        selected={featureProcess === current}\r\n                        onClick={() => {\r\n                          setCurrent(featureProcess)\r\n                        }}\r\n                        onDoubleClick={() => {\r\n                          history.push(`/${featureProcess.featureId}/feature-process/${featureProcess.featureProcessId}/detail`);\r\n                        }}\r\n                    >\r\n                      <TableColumn label={t(\"feature-process.fields.featureStatusName\")}>{featureProcess.featureStatusName}</TableColumn>\r\n                      <TableColumn label={t(\"feature-process.fields.dateIns\")}>{featureProcess.dateIns}</TableColumn>\r\n                    </TableRow>\r\n                );\r\n              }) : null}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessListPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {FeatureProcess} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  getFeatureProcess\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {Form} from \"jfront-components\";\r\nimport {FormField} from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessDetailPage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId, featureProcessId} = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcess, setFeatureProcess] = useState<FeatureProcess>();\r\n\r\n  useEffect(() => {\r\n    if (featureId && featureProcessId) {\r\n      getFeatureProcess(parseInt(featureId), featureProcessId).then(featureProcess => {\r\n        setFeatureProcess(featureProcess);\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(`/${featureId}/detail`);\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate\r\n              onClick={() => history.push(`/${featureId}/feature-process/create`)}/>\r\n          <ToolbarButtonDelete onClick={() => {\r\n            if (featureId && featureProcessId) {\r\n              deleteFeatureProcess(parseInt(featureId), parseInt(featureProcessId)).then(() => {\r\n                history.push(`/${featureId}/feature-process`);\r\n              });\r\n            }\r\n          }}/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => {\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.featureStatusCode\")}</Label>\r\n            <Label>{featureProcess?.featureStatusName}</Label>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.dateIns\")}</Label>\r\n            <Label>{featureProcess?.dateIns}</Label>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessDetailPage;","import React, {useEffect, useState} from \"react\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {Form} from \"jfront-components\";\r\nimport {FormField} from \"jfront-components\";\r\nimport {\r\n  createFeatureProcess,\r\n  getFeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport Label from \"../../../components/label\";\r\nimport {useFormik} from \"formik\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessCreatePage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId} = useParams();\r\n  const mainTabSelected = false;\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n\r\n  const onSubmit = (data: FeatureProcessCreate) => {\r\n    if (featureId) {\r\n      createFeatureProcess(parseInt(featureId), data).then(value => {\r\n        history.push(`/${value.featureId}/feature-process/${value.featureProcessId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n    });\r\n  }, [])\r\n\r\n  const formik = useFormik<FeatureProcessCreate>({\r\n    initialValues: {\r\n      featureStatusCode: \"\"\r\n    },\r\n    onSubmit: (values: FeatureProcessCreate) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(\"/\")\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)}/>\r\n          <ToolbarButtonSave onClick={() => {\r\n            let button = document.getElementById(\"feature-process-save\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}/>\r\n          <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)}/>\r\n          <ToolbarButtonDelete/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => history.goBack()}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.featureStatusCode\")}</Label>\r\n            <select \r\n                name=\"featureStatusCode\" \r\n                value={formik.values.featureStatusCode}\r\n                onChange={formik.handleChange}\r\n            >\r\n              <option value={undefined}></option>\r\n              {statusOptions ? statusOptions.map(option => {\r\n                return <option key={option.value} value={option.value}>{option.name}</option>\r\n              }) : null}\r\n            </select>\r\n          </FormField>\r\n          <FormField>\r\n            <input type=\"submit\" id=\"feature-process-save\" hidden={true}/>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessCreatePage;","import React, {useState, Suspense, useEffect} from 'react';\r\n\r\nimport DetailPage from \"./pages/feature/view/Detail\";\r\nimport {BrowserRouter, Route, Switch, useLocation} from \"react-router-dom\";\r\nimport CreatePage from \"./pages/feature/create/Create\";\r\nimport SearchPage from \"./pages/feature/search/Search\";\r\nimport ListPage from \"./pages/feature/view/List\";\r\nimport EditPage from \"./pages/feature/edit/Edit\";\r\nimport FeatureProcessListPage from \"./pages/feature-process/view/List\";\r\nimport FeatureProcessDetailPage from \"./pages/feature-process/view/Detail\";\r\nimport FeatureProcessCreatePage from \"./pages/feature-process/create/Create\";\r\nimport {SearchContext, SearchContextInterface} from './context';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Loader = () => (\r\n    <div>\r\n      <div>Loading...</div>\r\n    </div>\r\n);\r\n\r\nfunction Main() {\r\n  const {t, i18n} = useTranslation();\r\n  const language = new URLSearchParams(window.location.search).get(\"locale\");\r\n  const [searchId, setSearchId] = useState<string>(\"\");\r\n\r\n  const searchFeature: SearchContextInterface = {\r\n    getSearch(): string {\r\n      return searchId;\r\n    },\r\n    setSearch(searchId: string) {\r\n      setSearchId(searchId);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (language) {\r\n      i18n.changeLanguage(language);\r\n    }\r\n  }, [language])\r\n\r\n  return (\r\n      <SearchContext.Provider value={searchFeature}>\r\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={SearchPage}/>\r\n            <Route path=\"/create\" exact component={CreatePage}/>\r\n            <Route path=\"/:featureId/edit\" exact component={EditPage}/>\r\n            <Route path=\"/:featureId/detail\" component={DetailPage}/>\r\n            <Route path=\"/list/:searchId\" component={ListPage}/>\r\n            <Route path=\"/:featureId/feature-process\" exact component={FeatureProcessListPage}/>\r\n            <Route path=\"/:featureId/feature-process/:featureProcessId/detail\"\r\n                   component={FeatureProcessDetailPage}/>\r\n            <Route path=\"/:featureId/feature-process/create\" exact\r\n                   component={FeatureProcessCreatePage}/>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </SearchContext.Provider>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n      <Suspense fallback={<Loader/>}>\r\n        <Main/>\r\n      </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    backend: {\r\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/translation.json`\r\n    },\r\n    fallbackLng: 'ru-RU',\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}