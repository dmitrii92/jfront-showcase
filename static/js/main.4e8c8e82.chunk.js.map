{"version":3,"sources":["components/label/Label.tsx","api/feature/FeatureApi.ts","context.ts","pages/feature/view/Detail.tsx","components/input/Input.tsx","pages/feature/create/Create.tsx","api/feature-process/FeatureProcessApi.ts","components/checkbox-group/CheckBoxGroup.tsx","components/checkbox/CheckBox.tsx","pages/feature/search/Search.tsx","pages/feature/view/List.tsx","pages/feature/edit/Edit.tsx","pages/feature-process/view/List.tsx","pages/feature-process/view/Detail.tsx","pages/feature-process/create/Create.tsx","App.tsx","serviceWorker.ts","i18n.js","index.tsx"],"names":["StyledLabel","styled","label","Label","props","children","API_URL","getFeature","id","url","axios","defaults","withCredentials","get","then","response","data","catch","reason","console","log","Promise","reject","deleteFeature","featureId","resolve","delete","headers","Accept","status","error","getResultSetSize","searchId","SearchContext","React","createContext","DetailPage","history","useHistory","useParams","useState","mainTabSelected","setMainTabSelected","currentFeature","setCurrentFeature","searchContext","useContext","t","useTranslation","useEffect","feature","selected","onClick","push","disabled","getSearch","style","width","textAlign","featureStatus","name","featureName","featureNameEn","dateIns","toString","Date","toLocaleDateString","description","author","responsible","StyledInput","input","CreatePage","onSubmit","post","location","createFeature","formik","useFormik","initialValues","values","button","document","getElementById","click","handleSubmit","Input","value","onChange","handleChange","type","hidden","deleteFeatureProcess","featureProcessId","getFeatureStatusOptions","StyledCheckBoxGroup","div","StyledUl","CheckBoxGroup","isLoading","setIsLoading","state","setState","text","Children","map","checkbox","index","isValidElement","cloneElement","undefined","event","_text","newValue","slice","changedValueIndex","findIndex","stateValue","target","checked","splice","handleCheckboxChange","StyledCheckBoxInput","StyledCheckBoxLabel","StyledCheckBox","span","CheckBox","htmlId","nextId","htmlFor","SearchPage","statusOptions","setStatusOptions","dateInsFrom","dateInsTo","searchRequest","split","pop","postSearchRequest","template","resultSize","setSearch","alert","options","autoComplete","featureNameTemplate","featureNameEnTemplate","date","setFieldValue","statusCodeList","option","ListPage","useLocation","query","URLSearchParams","search","searchSize","setSearchSize","pageSize","parseInt","page","features","setFeatures","find","searchFeatures","key","onDoubleClick","currentPage","rowCount","totalRowCount","onRefresh","pageNumber","pathname","EditPage","put","updateFeature","enableReinitialize","defaultValue","FeatureProcessListPage","featureProcesses","setFeatureProcesses","current","setCurrent","findFeatureProcess","processes","featureProcess","featureStatusName","FeatureProcessDetailPage","setFeatureProcess","getFeatureProcess","FeatureProcessCreatePage","featureProcessCreate","createFeatureProcess","featureStatusCode","goBack","Loader","Main","i18n","language","window","setSearchId","searchFeature","changeLanguage","Provider","basename","process","path","exact","component","App","fallback","Boolean","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4e8c8e82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface LabelInterface extends React.LabelHTMLAttributes<HTMLLabelElement>{\r\n}\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  text-align: right;\r\n  width: 200px;\r\n  min-width: 200px;\r\n  padding-right: 5px;\r\n  //float: left;\r\n  //vertical-align: middle;\r\n`;\r\n\r\nconst Label: React.FC<LabelInterface> = (props) => {\r\n  return (\r\n      <StyledLabel {...props}>{props.children}</StyledLabel>\r\n  );\r\n}\r\n\r\nexport default Label;","import axios from \"axios\";\r\nimport {\r\n  Feature,\r\n  FeatureCreate,\r\n  FeatureSearchTemplate,\r\n  FeatureUpdate,\r\n} from \"./FeatureInterface\";\r\nimport { SearchRequest } from \"../types\";\r\n\r\nconst API_URL = \"https://jepria-spring-feature.herokuapp.com\";\r\nconst USER = \"user\";\r\nconst PASSWORD = \"123\";\r\nconst withCredentials = false;\r\n\r\nexport const getFeature = (id?: string): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${id}/`;\r\n\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n    .get(\r\n      url\r\n      // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const createFeature = (feature: FeatureCreate): Promise<Feature> => {\r\n  const url = `${API_URL}/feature`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios\r\n      .post(url, feature, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (201 === response.status) {\r\n          let location: string = response.headers[\"location\"];\r\n          console.log(\"location\" + location);\r\n          axios\r\n            .get(location, {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                Accept: \"application/json;charset=utf-8\",\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (200 === response.status) {\r\n                resolve(response.data);\r\n              } else {\r\n                reject(response);\r\n              }\r\n            })\r\n            .catch((error) => reject(error));\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const updateFeature = (\r\n  featureId: string,\r\n  feature: FeatureUpdate\r\n): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${featureId}/`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios\r\n      .put(url, feature, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const deleteFeature = (featureId: string): Promise<void> => {\r\n  const url = `${API_URL}/feature/${featureId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios\r\n      .delete(url, {\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const postSearchRequest = (\r\n  searchRequest: SearchRequest<FeatureSearchTemplate>\r\n) => {\r\n  const url = `${API_URL}/feature/search`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  console.log(searchRequest);\r\n  return new Promise<string>((resolve, reject) => {\r\n    axios\r\n      .post(url, searchRequest, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (201 === response.status) {\r\n          let location: string = response.headers[\"location\"];\r\n          console.log(response);\r\n          resolve(location.split(\"/\").pop());\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const searchFeatures = (\r\n  searchId: string,\r\n  pageSize: number,\r\n  page: number\r\n): Promise<Array<Feature>> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset?pageSize=${pageSize}&page=${page}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<Array<Feature>>((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve(response.data);\r\n        } else if (204 === response.status) {\r\n          resolve([]);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getResultSetSize = (searchId: string): Promise<number> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset-size`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<number>((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve(response.data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nexport interface SearchContextInterface {\r\n  getSearch(): string,\r\n  setSearch(searchId: string): void\r\n}\r\n\r\nexport const SearchContext = React.createContext<SearchContextInterface | null>(null);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form } from \"jfront-components\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport { deleteFeature, getFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DetailPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(true);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const searchContext = useContext(SearchContext);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab\r\n          selected={mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(true);\r\n          }}\r\n        >\r\n          {t(\"feature.header\")}\r\n        </Tab>\r\n        <Tab\r\n          selected={!mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(false);\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}\r\n        >\r\n          {t(\"feature-process.header\")}\r\n        </Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave disabled={true} />\r\n        <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)} />\r\n        <ToolbarButtonDelete\r\n          onClick={() => {\r\n            if (featureId) {\r\n              deleteFeature(featureId).then(() => {\r\n                let searchId = searchContext?.getSearch();\r\n                if (searchId) {\r\n                  history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n                } else {\r\n                  history.push(`/`);\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            } else {\r\n              history.push(\"/\");\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureId}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureStatus\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureName}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureNameEn}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateIns\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.dateIns.toString() ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString() : \"\"}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.description\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.description}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.author\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>Порядок выполнения:</Label>\r\n          <Label />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.responsible\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Label>\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledInput = styled.input`\r\n  width: 200px;\r\n`;\r\n\r\n\r\nexport default StyledInput;","import React, { useContext } from \"react\";\r\nimport { Form } from \"jfront-components\";\r\nimport Input from \"../../../components/input\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FeatureCreate } from \"../../../api/feature/FeatureInterface\";\r\nimport { createFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst CreatePage = () => {\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureCreate) => {\r\n    createFeature(data).then((feature) => {\r\n      history.push(`/${feature.featureId}/detail`);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik<FeatureCreate>({\r\n    initialValues: {\r\n      description: \"\",\r\n      featureName: \"\",\r\n      featureNameEn: \"\",\r\n    },\r\n    onSubmit: (values: FeatureCreate) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate disabled={true} />\r\n        <ToolbarButtonSave\r\n          onClick={() => {\r\n            let button = document.getElementById(\"create-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete disabled={true} />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form id=\"create-form\" onSubmit={formik.handleSubmit}>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n          <Input\r\n            name=\"featureName\"\r\n            value={formik.values.featureName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n          <Input\r\n            name=\"featureNameEn\"\r\n            value={formik.values.featureNameEn}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.description\")}:</Label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Input id=\"create-submit\" type=\"submit\" hidden={true} />\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePage;\r\n","import axios from \"axios\";\r\nimport {\r\n  FeatureProcess,\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions,\r\n} from \"./FeatureProcessInterface\";\r\n\r\nconst API_URL = \"https://jepria-spring-feature.herokuapp.com\";\r\nconst USER = \"user\";\r\nconst PASSWORD = \"123\";\r\nconst withCredentials = false;\r\n\r\nexport const findFeatureProcess = (\r\n  featureId: number\r\n): Promise<FeatureProcess[]> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n    .get(\r\n      url\r\n      // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const createFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessCreate: FeatureProcessCreate\r\n): Promise<FeatureProcess> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<FeatureProcess>((resolve, reject) => {\r\n    axios\r\n      .post(url, featureProcessCreate, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          let location: string = response.headers[\"location\"];\r\n          console.log(\"location\" + location);\r\n          axios\r\n            .get(location, {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                Accept: \"application/json;charset=utf-8\",\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (200 === response.status) {\r\n                resolve(response.data);\r\n              } else {\r\n                reject(response);\r\n              }\r\n            })\r\n            .catch((error) => reject(error));\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessId: string\r\n): Promise<FeatureProcess> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n    .get(url, {\r\n      // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const deleteFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessId: number\r\n): Promise<void> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios\r\n      .delete(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getFeatureStatusOptions = (): Promise<FeatureStatusOptions[]> => {\r\n  const url = `${API_URL}/feature/option/feature-status`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n    .get(url, {\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n","import React, { useState, useEffect, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Label from \"../label\";\r\n\r\ninterface CheckBoxGroupInterface {\r\n  children: ReactNode[];\r\n  name?: string;\r\n  value?: any[];\r\n  text?: string;\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Обработчик изменения значения 'checked' одного из дочерних элементов\r\n   */\r\n  onChange?: (value?: any[], event?: React.ChangeEvent<any>) => void;\r\n}\r\n\r\nconst StyledCheckBoxGroup = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: left;\r\n  //flex-direction: column;\r\n`;\r\n\r\nconst StyledUl = styled.div`\r\n  width: 200px;\r\n  margin: 2px;\r\n  padding: 5px;\r\n  border: 1px solid grey;\r\n  //text-align: left;\r\n  padding-left: 0;\r\n`;\r\n\r\nconst CheckBoxGroup: React.FC<CheckBoxGroupInterface> = (props) => {\r\n  const [isLoading, setIsLoading] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(isLoading);\r\n  }, [isLoading]);\r\n\r\n  let [state, setState] = useState<any[]>([]);\r\n\r\n  const handleCheckboxChange = (\r\n    value: React.ReactText,\r\n    event: React.ChangeEvent<any> | undefined\r\n  ) => {\r\n    const newValue = props.value ? props.value.slice() : state.slice();\r\n    const changedValueIndex = newValue.findIndex(\r\n      (stateValue) => stateValue === value\r\n    );\r\n\r\n    if (event.target.checked) {\r\n      newValue.push(value);\r\n    } else {\r\n      newValue.splice(changedValueIndex, 1);\r\n    }\r\n\r\n    setState(newValue);\r\n\r\n    if (props.onChange) {\r\n      props.onChange(newValue, event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCheckBoxGroup>\r\n      <Label>{props.text}</Label>\r\n      <StyledUl>\r\n        {React.Children.map(props.children, (checkbox, index) => {\r\n          if (!React.isValidElement(checkbox)) {\r\n            return null;\r\n          }\r\n\r\n          return React.cloneElement(checkbox, {\r\n            disabled: checkbox.props.disabled || props.disabled,\r\n            value: props.value[index],\r\n            onChange:\r\n              checkbox.props.onChange === undefined\r\n                ? (event: any, _text: any) =>\r\n                    handleCheckboxChange(checkbox.props.value, event)\r\n                : checkbox.props.onChange,\r\n          });\r\n        })}\r\n      </StyledUl>\r\n    </StyledCheckBoxGroup>\r\n  );\r\n};\r\n\r\nexport default CheckBoxGroup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport nextId from \"react-id-generator\";\r\n\r\nexport interface CheckBoxInterface\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  /**\r\n   * Подпись к чекбоксу\r\n   */\r\n  label?: string;\r\n}\r\n\r\nconst StyledCheckBoxInput = styled.input`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledCheckBoxLabel = styled.label`\r\n  height: 20px;\r\n  width: 100px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  -webkit-touch-callout: none; /* iOS Safari */\r\n  -webkit-user-select: none; /* Safari */\r\n  -khtml-user-select: none; /* Konqueror HTML */\r\n  -moz-user-select: none; /* Old versions of Firefox */\r\n  -ms-user-select: none; /* Internet Explorer/Edge */\r\n  user-select: none; /* Non-prefixed version, currently\r\n                              supported by Chrome, Edge, Opera and Firefox */\r\n`;\r\n\r\nconst StyledCheckBox = styled.span`\r\n  margin: 2px;\r\n  height: 22px;\r\n  display: flex;\r\n  width: 100%;\r\n  font-family: tahoma, arial, helvetica, sans-serif;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #eee;\r\n  }\r\n`;\r\n\r\nconst CheckBox: React.FC<CheckBoxInterface> = (props) => {\r\n  const htmlId = props.id ? props.id : nextId();\r\n\r\n  return (\r\n    <StyledCheckBox>\r\n      <StyledCheckBoxLabel htmlFor={htmlId}>{props.label}</StyledCheckBoxLabel>\r\n      <StyledCheckBoxInput\r\n        id={htmlId}\r\n        type=\"checkbox\"\r\n        value={props.value}\r\n        checked={props.checked}\r\n        disabled={props.disabled}\r\n        onChange={props.onChange}\r\n      />\r\n    </StyledCheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form } from \"jfront-components\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport Input from \"../../../components/input\";\r\nimport {\r\n  getResultSetSize,\r\n  postSearchRequest,\r\n} from \"../../../api/feature/FeatureApi\";\r\nimport { SearchRequest } from \"../../../api/types\";\r\nimport { FeatureSearchTemplate } from \"../../../api/feature/FeatureInterface\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { FeatureStatusOptions } from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport { getFeatureStatusOptions } from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { DatePicker } from \"jfront-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CheckBoxGroup from \"../../../components/checkbox-group\";\r\nimport CheckBox from \"../../../components/checkbox\";\r\n\r\nconst SearchPage = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n\r\n  const onSubmit = (data: FeatureSearchTemplate) => {\r\n    if (!data.featureId) {\r\n      data.featureId = undefined;\r\n    }\r\n    if (!data.dateInsFrom) {\r\n      data.dateInsFrom = undefined;\r\n    }\r\n    if (!data.dateInsTo) {\r\n      data.dateInsTo = undefined;\r\n    }\r\n\r\n    let searchRequest: SearchRequest<FeatureSearchTemplate> = {\r\n      template: data,\r\n    };\r\n\r\n    postSearchRequest(searchRequest).then((searchId) => {\r\n      getResultSetSize(searchId).then((resultSize) => {\r\n        if (resultSize > 0) {\r\n          searchContext?.setSearch(searchId);\r\n          history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n        } else {\r\n          alert(\"Search empty!\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik<FeatureSearchTemplate>({\r\n    initialValues: {},\r\n    onSubmit: (values: FeatureSearchTemplate) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave disabled={true} />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete disabled={true} />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          disabled={!searchContext?.getSearch()}\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind disabled={true} />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let button = document.getElementById(\"search-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n          <Input\r\n            name=\"featureId\"\r\n            value={formik.values.featureId}\r\n            onChange={formik.handleChange}\r\n            type=\"number\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameTemplate\")}:</Label>\r\n          <Input\r\n            name=\"featureNameTemplate\"\r\n            value={formik.values.featureNameTemplate}\r\n            onChange={formik.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEnTemplate\")}:</Label>\r\n          <Input\r\n            name=\"featureNameEnTemplate\"\r\n            value={formik.values.featureNameEnTemplate}\r\n            onChange={formik.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateInsFrom\")}:</Label>\r\n          <DatePicker\r\n            name=\"dateInsFrom\"\r\n            selected={formik.values.dateInsFrom}\r\n            onChange={(date) => {\r\n              formik.setFieldValue(\"dateInsFrom\", date);\r\n            }}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateInsTo\")}:</Label>\r\n          <DatePicker\r\n            name=\"dateInsTo\"\r\n            selected={formik.values.dateInsTo}\r\n            onChange={(date) => {\r\n              formik.setFieldValue(\"dateInsTo\", date);\r\n            }}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.statusCodeList\")}</Label>\r\n          <CheckBoxGroup\r\n            name=\"statusCodeList\"\r\n            value={\r\n              formik.values.statusCodeList ? formik.values.statusCodeList : []\r\n            }\r\n            onChange={(newValue) => {\r\n              formik.setFieldValue(\"statusCodeList\", newValue);\r\n            }}\r\n          >\r\n            {statusOptions\r\n              ? statusOptions.map((option) => {\r\n                  return <CheckBox value={option.value} label={option.name} />;\r\n                })\r\n              : null}\r\n          </CheckBoxGroup>\r\n        </FormField>\r\n        <FormField>\r\n          <Input id=\"search-submit\" type=\"submit\" hidden={true} />\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Feature } from \"../../../api/feature/FeatureInterface\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteFeature,\r\n  getResultSetSize,\r\n  searchFeatures,\r\n} from \"../../../api/feature/FeatureApi\";\r\nimport {\r\n  JepGrid as Grid,\r\n  JepGridTable as Table,\r\n  JepGridHeaderCell as TableHeaderCell,\r\n  JepGridHeader as TableHeader,\r\n  JepGridBody as TableBody,\r\n  JepGridRow as TableRow,\r\n  JepGridRowCell as TableColumn,\r\n  JepGridPagingBar,\r\n} from \"jfront-components\";\r\nimport { Page, Content, Header } from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst ListPage = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { searchId } = useParams();\r\n  let query = useQuery();\r\n  const [searchSize, setSearchSize] = useState<number>(25);\r\n  const pageSize: number = parseInt(query.get(\"pageSize\") as string);\r\n  const page: number = parseInt(query.get(\"page\") as string);\r\n  const [features, setFeatures] = useState<Feature[]>([]);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n\r\n  const find = () => {\r\n    if (searchId) {\r\n      getResultSetSize(searchId).then((resultSize) => {\r\n        setSearchSize(resultSize);\r\n        if (searchId) {\r\n          searchFeatures(searchId, pageSize, page).then((features) => {\r\n            setFeatures(features);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    find();\r\n  }, [location]);\r\n\r\n  return (\r\n    <Page>\r\n      <Header>\r\n        <TabPanel>\r\n          <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n          <ToolbarButtonSave disabled={true} />\r\n          <ToolbarButtonEdit\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/edit`)}\r\n          />\r\n          <ToolbarButtonDelete\r\n            disabled={!currentFeature}\r\n            onClick={() => {\r\n              if (currentFeature) {\r\n                deleteFeature(currentFeature.featureId.toString()).then(() => {\r\n                  find();\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <ToolbarButtonView\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/detail`)}\r\n          />\r\n          <ToolbarSplitter />\r\n          <ToolbarButtonBase disabled={true}>\r\n            {t(\"toolbar.list\")}\r\n          </ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n          <ToolbarButtonBase disabled={true}>\r\n            {t(\"toolbar.find\")}\r\n          </ToolbarButtonBase>\r\n        </Toolbar>\r\n      </Header>\r\n      <Content>\r\n        <Grid>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableHeaderCell>{t(\"feature.fields.featureId\")}</TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.workSequence\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureStatus\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureName\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.featureNameEn\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.description\")}\r\n              </TableHeaderCell>\r\n              <TableHeaderCell>{t(\"feature.fields.dateIns\")}</TableHeaderCell>\r\n              <TableHeaderCell>{t(\"feature.fields.author\")}</TableHeaderCell>\r\n              <TableHeaderCell>\r\n                {t(\"feature.fields.responsible\")}\r\n              </TableHeaderCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {features\r\n                ? features.map((feature) => {\r\n                    return (\r\n                      <TableRow\r\n                        key={feature.featureId}\r\n                        selected={feature === currentFeature}\r\n                        onClick={() => {\r\n                          setCurrentFeature(feature);\r\n                        }}\r\n                        onDoubleClick={() => {\r\n                          history.push(`/${feature.featureId}/detail`);\r\n                        }}\r\n                      >\r\n                        <TableColumn label={t(\"feature.fields.featureId\")}>\r\n                          {feature.featureId}\r\n                        </TableColumn>\r\n                        <TableColumn\r\n                          label={t(\"feature.fields.workSequence\")}\r\n                        ></TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureStatus\")}>\r\n                          {feature.featureStatus?.name}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureName\")}>\r\n                          {feature.featureName}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.featureNameEn\")}>\r\n                          {feature.featureNameEn}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.description\")}>\r\n                          {feature.description}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.dateIns\")}>\r\n                          {new Date(feature.dateIns.toString()).toLocaleDateString()}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.author\")}>\r\n                          {feature.author?.name}\r\n                        </TableColumn>\r\n                        <TableColumn label={t(\"feature.fields.responsible\")}>\r\n                          {feature.responsible?.name}\r\n                        </TableColumn>\r\n                      </TableRow>\r\n                    );\r\n                  })\r\n                : null}\r\n            </TableBody>\r\n          </Table>\r\n          <JepGridPagingBar\r\n            currentPage={page}\r\n            rowCount={pageSize}\r\n            totalRowCount={searchSize}\r\n            onRefresh={(pageNumber, pageSize) => {\r\n              history.push({\r\n                pathname: `/list/${searchId}`,\r\n                search: `?page=${pageNumber}&pageSize=${pageSize}`,\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Content>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form } from \"jfront-components\";\r\nimport { FormField } from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport Input from \"../../../components/input\";\r\nimport { getFeature, updateFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature, FeatureUpdate } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"jfront-components\";\r\nimport { Tab, TabPanel } from \"jfront-components\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const searchContext = useContext(SearchContext);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureUpdate) => {\r\n    if (featureId) {\r\n      updateFeature(featureId.toString(), data).then(() => {\r\n        history.push(`/${featureId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik<FeatureUpdate>({\r\n    initialValues: {\r\n      featureName: currentFeature?.featureName\r\n        ? currentFeature?.featureName\r\n        : \"\",\r\n      featureNameEn: currentFeature?.featureNameEn\r\n        ? currentFeature?.featureNameEn\r\n        : \"\",\r\n      description: currentFeature?.description\r\n        ? currentFeature?.description\r\n        : \"\",\r\n    },\r\n    onSubmit: (values: FeatureUpdate) => {\r\n      onSubmit(values);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave\r\n          onClick={() => {\r\n            let button = document.getElementById(\"edit-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete />\r\n        <ToolbarButtonView\r\n          onClick={() => history.push(`/${featureId}/detail`)}\r\n        />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getSearch();\r\n            history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form id=\"edit-form\" onSubmit={formik.handleSubmit}>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureId\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureId}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureStatus\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureName\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureName}\r\n            name=\"featureName\"\r\n            value={formik.values.featureName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.featureNameEn\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureNameEn}\r\n            name=\"featureNameEn\"\r\n            value={formik.values.featureNameEn}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.dateIns\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.dateIns.toString() ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString() : \"\"}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.description\")}:</Label>\r\n          <Input\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.description}\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.author\")}:</Label>\r\n          <Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>{t(\"feature.fields.responsible\")}:</Label>\r\n          <Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Input id=\"edit-submit\" type=\"submit\" hidden={true} />\r\n        </FormField>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  JepGrid as Grid,\r\n  JepGridTable as Table,\r\n  JepGridHeaderCell as TableHeaderCell,\r\n  JepGridHeader as TableHeader,\r\n  JepGridBody as TableBody,\r\n  JepGridRow as TableRow,\r\n  JepGridRowCell as TableColumn,\r\n} from \"jfront-components\";\r\nimport {FeatureProcess} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  findFeatureProcess\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessListPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcesses, setFeatureProcesses] = useState<FeatureProcess[]>();\r\n  const [current, setCurrent] = useState<FeatureProcess>();\r\n  let {featureId} = useParams();\r\n  const {t} = useTranslation();\r\n\r\n  const find = () => {\r\n    if (featureId) {\r\n      findFeatureProcess(parseInt(featureId)).then((processes: FeatureProcess[]) => {\r\n        setFeatureProcesses(processes);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    find()\r\n  }, [location]);\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            setMainTabSelected(true)\r\n            history.push(`/${featureId}/detail`);\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected} onClick={() => {\r\n            setMainTabSelected(false);\r\n          }}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate\r\n              onClick={() => history.push(`/${featureId}/feature-process/create`)}/>\r\n          <ToolbarButtonDelete disabled={!current} onClick={() => {\r\n            if (current?.featureId && current.featureProcessId) {\r\n              deleteFeatureProcess(current?.featureId, current?.featureProcessId).then(() => {\r\n                find();\r\n              });\r\n            }\r\n          }}/>\r\n          <ToolbarButtonView disabled={!current}\r\n                             onClick={() => history.push(`/${current?.featureId}/feature-process/${current?.featureProcessId}/detail`)}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}\r\n                             onClick={() => history.push(`/${featureId}/feature-process/search`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Grid>\r\n          <Table>\r\n            <TableHeader>\r\n                <TableHeaderCell>{t(\"feature-process.fields.featureStatusName\")}</TableHeaderCell>\r\n                <TableHeaderCell>{t(\"feature-process.fields.dateIns\")}</TableHeaderCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {featureProcesses ? featureProcesses.map(featureProcess => {\r\n                return (\r\n                    <TableRow\r\n                        key={featureProcess.featureProcessId}\r\n                        selected={featureProcess === current}\r\n                        onClick={() => {\r\n                          setCurrent(featureProcess)\r\n                        }}\r\n                        onDoubleClick={() => {\r\n                          history.push(`/${featureProcess.featureId}/feature-process/${featureProcess.featureProcessId}/detail`);\r\n                        }}\r\n                    >\r\n                      <TableColumn label={t(\"feature-process.fields.featureStatusName\")}>{featureProcess.featureStatusName}</TableColumn>\r\n                      <TableColumn label={t(\"feature-process.fields.dateIns\")}>{featureProcess.dateIns}</TableColumn>\r\n                    </TableRow>\r\n                );\r\n              }) : null}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessListPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {FeatureProcess} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  getFeatureProcess\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {Form} from \"jfront-components\";\r\nimport {FormField} from \"jfront-components\";\r\nimport Label from \"../../../components/label\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessDetailPage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId, featureProcessId} = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcess, setFeatureProcess] = useState<FeatureProcess>();\r\n\r\n  useEffect(() => {\r\n    if (featureId && featureProcessId) {\r\n      getFeatureProcess(parseInt(featureId), featureProcessId).then(featureProcess => {\r\n        setFeatureProcess(featureProcess);\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(`/${featureId}/detail`);\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate\r\n              onClick={() => history.push(`/${featureId}/feature-process/create`)}/>\r\n          <ToolbarButtonDelete onClick={() => {\r\n            if (featureId && featureProcessId) {\r\n              deleteFeatureProcess(parseInt(featureId), parseInt(featureProcessId)).then(() => {\r\n                history.push(`/${featureId}/feature-process`);\r\n              });\r\n            }\r\n          }}/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => {\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.featureStatusCode\")}</Label>\r\n            <Label>{featureProcess?.featureStatusName}</Label>\r\n          </FormField>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.dateIns\")}</Label>\r\n            <Label>{featureProcess?.dateIns}</Label>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessDetailPage;","import React, {useEffect, useState} from \"react\";\r\nimport {Tab, TabPanel} from \"jfront-components\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"jfront-components\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {Form} from \"jfront-components\";\r\nimport {FormField} from \"jfront-components\";\r\nimport {\r\n  createFeatureProcess,\r\n  getFeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport Label from \"../../../components/label\";\r\nimport {useFormik} from \"formik\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessCreatePage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId} = useParams();\r\n  const mainTabSelected = false;\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n\r\n  const onSubmit = (data: FeatureProcessCreate) => {\r\n    if (featureId) {\r\n      createFeatureProcess(parseInt(featureId), data).then(value => {\r\n        history.push(`/${value.featureId}/feature-process/${value.featureProcessId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n    });\r\n  }, [])\r\n\r\n  const formik = useFormik<FeatureProcessCreate>({\r\n    initialValues: {\r\n      featureStatusCode: \"\"\r\n    },\r\n    onSubmit: (values: FeatureProcessCreate) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(\"/\")\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)}/>\r\n          <ToolbarButtonSave onClick={() => {\r\n            let button = document.getElementById(\"feature-process-save\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}/>\r\n          <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)}/>\r\n          <ToolbarButtonDelete/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => history.goBack()}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <FormField>\r\n            <Label>{t(\"feature-process.fields.featureStatusCode\")}</Label>\r\n            <select \r\n                name=\"featureStatusCode\" \r\n                value={formik.values.featureStatusCode}\r\n                onChange={formik.handleChange}\r\n            >\r\n              <option value={undefined}></option>\r\n              {statusOptions ? statusOptions.map(option => {\r\n                return <option key={option.value} value={option.value}>{option.name}</option>\r\n              }) : null}\r\n            </select>\r\n          </FormField>\r\n          <FormField>\r\n            <input type=\"submit\" id=\"feature-process-save\" hidden={true}/>\r\n          </FormField>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessCreatePage;","import React, {useState, Suspense, useEffect} from 'react';\r\n\r\nimport DetailPage from \"./pages/feature/view/Detail\";\r\nimport {BrowserRouter, Route, Switch, useLocation} from \"react-router-dom\";\r\nimport CreatePage from \"./pages/feature/create/Create\";\r\nimport SearchPage from \"./pages/feature/search/Search\";\r\nimport ListPage from \"./pages/feature/view/List\";\r\nimport EditPage from \"./pages/feature/edit/Edit\";\r\nimport FeatureProcessListPage from \"./pages/feature-process/view/List\";\r\nimport FeatureProcessDetailPage from \"./pages/feature-process/view/Detail\";\r\nimport FeatureProcessCreatePage from \"./pages/feature-process/create/Create\";\r\nimport {SearchContext, SearchContextInterface} from './context';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Loader = () => (\r\n    <div>\r\n      <div>Loading...</div>\r\n    </div>\r\n);\r\n\r\nfunction Main() {\r\n  const {t, i18n} = useTranslation();\r\n  const language = new URLSearchParams(window.location.search).get(\"locale\");\r\n  const [searchId, setSearchId] = useState<string>(\"\");\r\n\r\n  const searchFeature: SearchContextInterface = {\r\n    getSearch(): string {\r\n      return searchId;\r\n    },\r\n    setSearch(searchId: string) {\r\n      setSearchId(searchId);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (language) {\r\n      i18n.changeLanguage(language);\r\n    }\r\n  }, [language])\r\n\r\n  return (\r\n      <SearchContext.Provider value={searchFeature}>\r\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={SearchPage}/>\r\n            <Route path=\"/create\" exact component={CreatePage}/>\r\n            <Route path=\"/:featureId/edit\" exact component={EditPage}/>\r\n            <Route path=\"/:featureId/detail\" component={DetailPage}/>\r\n            <Route path=\"/list/:searchId\" component={ListPage}/>\r\n            <Route path=\"/:featureId/feature-process\" exact component={FeatureProcessListPage}/>\r\n            <Route path=\"/:featureId/feature-process/:featureProcessId/detail\"\r\n                   component={FeatureProcessDetailPage}/>\r\n            <Route path=\"/:featureId/feature-process/create\" exact\r\n                   component={FeatureProcessCreatePage}/>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </SearchContext.Provider>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n      <Suspense fallback={<Loader/>}>\r\n        <Main/>\r\n      </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    backend: {\r\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/translation.json`\r\n    },\r\n    fallbackLng: 'ru-RU',\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}