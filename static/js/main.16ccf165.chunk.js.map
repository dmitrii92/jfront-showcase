{"version":3,"sources":["api/feature/FeatureApi.ts","context.ts","pages/feature/view/Detail.tsx","pages/feature/create/Create.tsx","api/feature-process/FeatureProcessApi.ts","pages/feature/search/Search.tsx","pages/feature/view/List.tsx","pages/feature/edit/Edit.tsx","pages/feature-process/view/List.tsx","pages/feature-process/view/Detail.tsx","pages/feature-process/create/Create.tsx","App.tsx","serviceWorker.ts","i18n.js","index.tsx"],"names":["API_URL","getFeature","id","url","axios","defaults","withCredentials","get","then","response","data","catch","reason","console","log","Promise","reject","deleteFeature","featureId","resolve","delete","headers","Accept","status","error","searchFeatures","searchId","pageSize","page","SearchContext","React","createContext","DetailPage","history","useHistory","useParams","useState","mainTabSelected","setMainTabSelected","currentFeature","setCurrentFeature","searchContext","useContext","t","useTranslation","useEffect","feature","selected","onClick","push","disabled","getId","Field","Label","style","width","justifyContent","featureStatus","name","featureName","featureNameEn","dateIns","toString","Date","toLocaleDateString","description","author","responsible","CreatePage","onSubmit","post","location","createFeature","formik","useFormik","initialValues","values","button","document","getElementById","click","handleSubmit","value","onChange","handleChange","type","hidden","deleteFeatureProcess","featureProcessId","getFeatureStatusOptions","SearchPage","statusOptions","setStatusOptions","isLoading","setIsLoading","options","getTemplate","undefined","dateInsFrom","dateInsTo","query","queryString","stringify","display","autoComplete","featureNameTemplate","featureNameEnTemplate","date","setFieldValue","statusCodeList","newValue","map","option","label","ListPage","useLocation","URLSearchParams","search","setSearchSize","parseInt","features","setFeatures","find","searchTemplate","parse","searchRequest","template","Object","is","JSON","split","pop","postSearchRequest","getResultSetSize","resultSize","setTemplate","setId","alert","Header","Content","textAlign","columns","accessor","onSelection","selectedFeatures","length","onDoubleClick","EditPage","put","updateFeature","enableReinitialize","defaultValue","FeatureProcessListPage","featureProcesses","setFeatureProcesses","current","setCurrent","findFeatureProcess","processes","featureProcess","FeatureProcessDetailPage","setFeatureProcess","getFeatureProcess","featureStatusName","FeatureProcessCreatePage","featureProcessCreate","createFeatureProcess","featureStatusCode","goBack","key","Loader","Main","i18n","language","window","setSearchId","setSearchTemplate","searchFeature","changeLanguage","Provider","basename","process","path","exact","component","App","fallback","Boolean","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0RASMA,EAAU,8CAKHC,EAAa,SAACC,GACzB,IAAMC,EAAG,UAAMH,EAAN,oBAAyBE,EAAzB,KAGT,OADAE,IAAMC,SAASC,iBALO,EAMfF,IACJG,IACCJ,GAGDK,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAEN,OADAC,QAAQC,IAAIF,GACLG,QAAQC,OAAOJ,OAsEfK,EAAgB,SAACC,GAC5B,IAAMf,EAAG,UAAMH,EAAN,oBAAyBkB,GAGlC,OAFAd,IAAMC,SAASC,iBAtFO,EAwFf,IAAIS,SAAc,SAACI,EAASH,GACjCZ,IACGgB,OAAOjB,EAAK,CACXkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,IAEAH,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,UAiClBC,EAAiB,SAC5BC,EACAC,EACAC,GAEA,IAAMzB,EAAG,UAAMH,EAAN,2BAAgC0B,EAAhC,+BAA+DC,EAA/D,iBAAgFC,GAEzF,OADAxB,IAAMC,SAASC,iBA9IO,EA+If,IAAIS,SAAwB,SAACI,EAASH,GAC3CZ,IACGG,IAAIJ,EAAK,CAERkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,iCAChB,gBAAiB,cAGpBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,EAAQV,EAASC,MACR,MAAQD,EAASc,OAC1BJ,EAAQ,IAERH,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,U,0BCpKlBK,EAAgBC,IAAMC,cAA6C,M,SCgJjEC,EAtII,WAAO,IAAD,MACjBC,EAAUC,cACVhB,EAAciB,cAAdjB,UAFiB,EAGuBkB,oBAAkB,GAHzC,mBAGhBC,EAHgB,KAGCC,EAHD,OAIqBF,qBAJrB,mBAIhBG,EAJgB,KAIAC,EAJA,KAKjBC,EAAgBC,qBAAWb,GACzBc,EAAMC,cAAND,EAQR,OANAE,qBAAU,WACR5C,EAAWiB,GAAWV,MAAK,SAACsC,GAC1BN,EAAkBM,QAEnB,IAGD,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAUV,EACVW,QAAS,WACPV,GAAmB,KAGpBK,EAAE,mBAEL,kBAAC,IAAD,CACEI,UAAWV,EACXW,QAAS,WACPV,GAAmB,GACnBL,EAAQgB,KAAR,WAAiB/B,EAAjB,uBAGDyB,EAAE,4BAGP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,cACpC,kBAAC,IAAD,CAAmBC,UAAU,IAC7B,kBAAC,IAAD,CAAmBF,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,aAClC,kBAAC,IAAD,CACE8B,QAAS,WACH9B,GACFD,EAAcC,GAAWV,MAAK,WAC5B,IAAIkB,EAAQ,OAAGe,QAAH,IAAGA,OAAH,EAAGA,EAAeU,QAC1BzB,EACFO,EAAQgB,KAAR,gBAAsBvB,EAAtB,yBAEAO,EAAQgB,KAAR,WAMV,kBAAC,IAAD,CAAmBC,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEF,QAAS,WACP,IAAItB,EAAQ,OAAGe,QAAH,IAAGA,OAAH,EAAGA,EAAeU,QAC1BzB,EACFO,EAAQgB,KAAR,gBAAsBvB,EAAtB,yBAEAO,EAAQgB,KAAK,OAIhBN,EAAE,iBAEL,kBAAC,IAAD,CAAmBK,QAAS,kBAAMf,EAAQgB,KAAR,QAClC,kBAAC,IAAD,CAAmBC,UAAU,GAAOP,EAAE,kBAExC,kBAAC,IAAD,KACE,kBAAC,IAAKS,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,4BAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,eAArD,OAAsEjB,QAAtE,IAAsEA,OAAtE,EAAsEA,EAAgBrB,YAExF,kBAAC,IAAKkC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,gCAAf,KACA,kBAAC,IAAKU,MAAN,CACEC,MAAO,CACLC,MAAO,QACPC,eAAgB,eAHpB,OAMGjB,QANH,IAMGA,GANH,UAMGA,EAAgBkB,qBANnB,aAMG,EAA+BC,OAGpC,kBAAC,IAAKN,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,eAArD,OAAsEjB,QAAtE,IAAsEA,OAAtE,EAAsEA,EAAgBoB,cAExF,kBAAC,IAAKP,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,gCAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,eAArD,OACGjB,QADH,IACGA,OADH,EACGA,EAAgBqB,gBAGrB,kBAAC,IAAKR,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,0BAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,gBACpC,OAAdjB,QAAc,IAAdA,OAAA,EAAAA,EAAgBsB,QAAQC,YACrB,IAAIC,KAAJ,OAASxB,QAAT,IAASA,OAAT,EAASA,EAAgBsB,QAAQC,YAAYE,qBAC7C,KAGR,kBAAC,IAAKZ,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,eAArD,OAAsEjB,QAAtE,IAAsEA,OAAtE,EAAsEA,EAAgB0B,cAExF,kBAAC,IAAKb,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,yBAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASC,eAAgB,eAArD,OACGjB,QADH,IACGA,GADH,UACGA,EAAgB2B,cADnB,aACG,EAAwBR,OAG7B,kBAAC,IAAKN,MAAN,KACE,kBAAC,IAAKC,MAAN,iHACA,kBAAC,IAAKA,MAAN,OAEF,kBAAC,IAAKD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAKU,MAAN,CACEC,MAAO,CACLC,MAAO,QACPC,eAAgB,eAHpB,OAMGjB,QANH,IAMGA,GANH,UAMGA,EAAgB4B,mBANnB,aAMG,EAA6BT,U,wBCnC3BU,EAzFI,WACjB,IAAMnC,EAAUC,cACVO,EAAgBC,qBAAWb,GACzBc,EAAMC,cAAND,EAEF0B,EAAW,SAAC3D,IHGS,SAACoC,GAC5B,IAAM3C,EAAG,UAAMH,EAAN,YAET,OAAO,IAAIe,SAAiB,SAACI,EAASH,GACpCZ,IACGkE,KAAKnE,EAAK2C,EAAS,CAElBzB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACL,GAAI,MAAQA,EAASc,OAAQ,CAC3B,IAAIgD,EAAmB9D,EAASY,QAAT,SACvBR,QAAQC,IAAI,WAAayD,GACzBnE,IACGG,IAAIgE,EAAU,CAEblD,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,EAAQV,EAASC,MAEjBM,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,WAE3BR,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,UGtC3BgD,CAAc9D,GAAMF,MAAK,SAACsC,GACxBb,EAAQgB,KAAR,WAAiBH,EAAQ5B,UAAzB,gBAIEuD,EAASC,YAAyB,CACtCC,cAAe,CACbV,YAAa,GACbN,YAAa,GACbC,cAAe,IAEjBS,SAAU,SAACO,GACTP,EAASO,MAIb,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK7B,UAAU,GAAOJ,EAAE,oBAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBO,UAAU,IAC/B,kBAAC,IAAD,CACEF,QAAS,WACP,IAAI6B,EAASC,SAASC,eAAe,iBACjCF,GACFA,EAAOG,WAIb,kBAAC,IAAD,CAAmB9B,UAAU,IAC7B,kBAAC,IAAD,CAAqBA,UAAU,IAC/B,kBAAC,IAAD,CAAmBA,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEF,QAAS,WACP,IAAItB,EAAQ,OAAGe,QAAH,IAAGA,OAAH,EAAGA,EAAeU,QAC1BzB,GACFO,EAAQgB,KAAR,gBAAsBvB,EAAtB,2BAIHiB,EAAE,iBAEL,kBAAC,IAAD,CAAmBK,QAAS,kBAAMf,EAAQgB,KAAR,QAClC,kBAAC,IAAD,CAAmBC,UAAU,GAC1BP,EAAE,kBAGP,kBAAC,IAAD,CAAMzC,GAAG,cAAcmE,SAAUI,EAAOQ,cACtC,kBAAC,IAAK7B,MAAN,KACA,kBAAC,IAAKC,MAAN,KAAaV,EAAE,+BACb,kBAAC,IAAD,CACEe,KAAK,cACLwB,MAAOT,EAAOG,OAAOjB,YACrBwB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,iCACf,kBAAC,IAAD,CACEe,KAAK,gBACLwB,MAAOT,EAAOG,OAAOhB,cACrBuB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,8BACEe,KAAK,cACLwB,MAAOT,EAAOG,OAAOX,YACrBkB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,2BAAOlD,GAAG,gBAAgBmF,KAAK,SAASC,QAAQ,QCjGpDtF,EAAU,8CAwFHuF,EAAuB,SAClCrE,EACAsE,GAEA,IAAMrF,EAAG,UAAMH,EAAN,oBAAyBkB,EAAzB,4BAAsDsE,GAG/D,OAFApF,IAAMC,SAASC,iBA1FO,EA4Ff,IAAIS,SAAc,SAACI,EAASH,GACjCZ,IACGgB,OAAOjB,EAAK,CAEXkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,IAEAH,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,UAIlBiE,EAA0B,WACrC,IAAMtF,EAAG,UAAMH,EAAN,kCAGT,OAFAI,IAAMC,SAASC,iBAlHO,EAoHfF,IACJG,IAAIJ,EAAK,CACRkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAEN,OAAOG,QAAQC,OAAOJ,O,6CCwCb8E,EArJI,WAAO,IAChB/C,EAAMC,cAAND,EACFV,EAAUC,cACVO,EAAgBC,qBAAWb,GAHV,EAIiBO,qBAJjB,mBAIlBuD,EAJkB,KAIHC,EAJG,OAKWxD,oBAAkB,GAL7B,mBAKhByD,EALgB,KAKLC,EALK,KAyBvBjD,qBAAU,WACR4C,IAA0BjF,MAAK,SAACuF,GAC9BH,EAAiBG,GACjBD,GAAa,QAEd,IAEH,IAAMrB,EAASC,YAAiC,CAC9CC,cAAelC,EAAcuD,cAC7B3B,SAAU,SAACO,IA3BI,SAAClE,GACXA,EAAKQ,YACRR,EAAKQ,eAAY+E,GAEdvF,EAAKwF,cACRxF,EAAKwF,iBAAcD,GAEhBvF,EAAKyF,YACRzF,EAAKyF,eAAYF,GAGnB,IAAIG,EAAQC,IAAYC,UAAU5F,GAC9B0F,IACFA,EAAQ,IAAMA,GAEhBnE,EAAQgB,KAAR,mCAAyCmD,IAavC/B,CAASO,MAIb,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK7B,UAAU,GAAOJ,EAAE,oBAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,cACpC,kBAAC,IAAD,CAAmBC,UAAU,IAC7B,kBAAC,IAAD,CAAmBA,UAAU,IAC7B,kBAAC,IAAD,CAAqBA,UAAU,IAC/B,kBAAC,IAAD,CAAmBA,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEA,WAAU,OAACT,QAAD,IAACA,OAAD,EAACA,EAAeU,SAC1BH,QAAS,WACP,IAAItB,EAAQ,OAAGe,QAAH,IAAGA,OAAH,EAAGA,EAAeU,QAC1BzB,GACFO,EAAQgB,KAAR,gBAAsBvB,EAAtB,2BAIHiB,EAAE,iBAEL,kBAAC,IAAD,CAAmBO,UAAU,IAC7B,kBAAC,IAAD,CACEF,QAAS,WACP,IAAI6B,EAASC,SAASC,eAAe,iBACjCF,GACFA,EAAOG,UAIVrC,EAAE,kBAGP,kBAAC,IAAD,CAAM0B,SAAUI,EAAOQ,cACrB,kBAAC,IAAK7B,MAAN,CAAYE,MAAO,CAAEiD,QAAS,iBAC5B,kBAAC,IAAKlD,MAAN,KAAaV,EAAE,4BAAf,KACA,kBAAC,IAAD,CACEe,KAAK,YACLwB,MAAOT,EAAOG,OAAO1D,UACrBiE,SAAUV,EAAOW,aACjBC,KAAK,SACLmB,aAAa,SAGjB,kBAAC,IAAKpD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,sCAAf,KACA,kBAAC,IAAD,CACEe,KAAK,sBACLwB,MAAOT,EAAOG,OAAO6B,oBACrBtB,SAAUV,EAAOW,aACjBoB,aAAa,SAGjB,kBAAC,IAAKpD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,wCAAf,KACA,kBAAC,IAAD,CACEe,KAAK,wBACLwB,MAAOT,EAAOG,OAAO8B,sBACrBvB,SAAUV,EAAOW,aACjBoB,aAAa,SAGjB,kBAAC,IAAKpD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,+BACf,kBAAC,IAAD,CACEe,KAAK,cACLX,SAAU0B,EAAOG,OAAOsB,YACxBf,SAAU,SAACwB,GACTlC,EAAOmC,cAAc,cAAeD,OAI1C,kBAAC,IAAKvD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,6BACf,kBAAC,IAAD,CACEe,KAAK,YACLX,SAAU0B,EAAOG,OAAOuB,UACxBhB,SAAU,SAACwB,GACTlC,EAAOmC,cAAc,YAAaD,OAIxC,kBAAC,IAAKvD,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,kCACf,kBAAC,IAAD,CACEe,KAAK,iBACLkB,OAAQH,EAAOG,OAAOiC,eAAiBpC,EAAOG,OAAOiC,eAAiB,GACtEvD,MAAO,CAAEC,MAAO,SAChB4B,SAAU,SAACzB,EAAMoD,GACfrC,EAAOmC,cAAc,iBAAkBE,IAEzCjB,UAAWA,GAEVF,EACGA,EAAcoB,KAAI,SAACC,GACjB,OAAO,kBAAC,IAAD,CAAU9B,MAAO8B,EAAO9B,MAAO+B,MAAOD,EAAOtD,UAEtD,OAGR,kBAAC,IAAKN,MAAN,KACE,2BAAOlD,GAAG,gBAAgBmF,KAAK,SAASC,QAAQ,Q,kBCuB3C4B,EAhKE,WACf,IAAMjF,EAAUC,cACVqC,EAAW4C,cACbf,EANG,IAAIgB,gBAAgBD,cAAcE,QAGpB,EAIejF,mBAAiB,IAJhC,mBAIFkF,GAJE,WAKf3F,EAAmB4F,SAASnB,EAAM7F,IAAI,aACtCqB,EAAe2F,SAASnB,EAAM7F,IAAI,SANnB,EAOW6B,mBAAoB,IAP/B,mBAOdoF,EAPc,KAOJC,EAPI,OAQuBrF,qBARvB,mBAQdG,EARc,KAQEC,EARF,KASbG,EAAMC,cAAND,EACFF,EAAgBC,qBAAWb,GAVZ,EAWaO,oBAAkB,GAX/B,mBAWdyD,EAXc,KAWHC,EAXG,KAaf4B,EAAO,WACX,IAAIC,EAAiBtB,IAAYuB,MAAMrD,EAAS8C,QAC5CM,EAAe/F,OACjB+F,EAAe/F,UAAOqE,GAEpB0B,EAAehG,WACjBgG,EAAehG,cAAWsE,GAG5B,IAAI4B,EAAsD,CACxDC,SAAUH,GAITI,OAAOC,GACNC,KAAK3B,UAAU7D,EAAcuD,eAC7BiC,KAAK3B,UAAUD,IAAYuB,MAAMrD,EAAS8C,UAwB5C5F,EAAegB,EAAcU,QAASxB,EAAUC,GAAMpB,MAAK,SAACgH,GAC1DC,EAAYD,GACZ1B,GAAa,MNgCY,SAC/B+B,GAEA,IAAM1H,EAAG,UAAMH,EAAN,mBAGT,OAFAI,IAAMC,SAASC,iBA/GO,EAgHtBO,QAAQC,IAAI+G,GACL,IAAI9G,SAAgB,SAACI,EAASH,GACnCZ,IACGkE,KAAKnE,EAAK0H,EAAe,CAExBxG,QAAS,CACPC,OAAQ,iCACR,eAAgB,iCAChB,gBAAiB,cAGpBd,MAAK,SAACC,GACL,GAAI,MAAQA,EAASc,OAAQ,CAC3B,IAAIgD,EAAmB9D,EAASY,QAAT,SACvBR,QAAQC,IAAIL,GACZU,EAAQoD,EAAS2D,MAAM,KAAKC,YAE5BnH,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,SMhFzB4G,CAAkBP,GAAerH,MAAK,SAACkB,GACrCoE,GAAa,GNiHW,SAACpE,GAC/B,IAAMvB,EAAG,UAAMH,EAAN,2BAAgC0B,EAAhC,mBAET,OADAtB,IAAMC,SAASC,iBAxKO,EAyKf,IAAIS,SAAgB,SAACI,EAASH,GACnCZ,IACGG,IAAIJ,EAAK,CAERkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,iCAChB,gBAAiB,cAGpBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,EAAQV,EAASC,MAEjBM,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,SMpIvB6G,CAAiB3G,GAAUlB,MAAK,SAAC8H,GAC3BA,EAAa,GACf7F,EAAc8F,YAAYV,EAAcC,UACxCrF,EAAc+F,MAAM9G,GAEpB4F,EAAcgB,GACV5G,GACFD,EAAeC,EAAUC,EAAUC,GAAMpB,MAAK,SAACgH,GAC7CC,EAAYD,GACZ1B,GAAa,QAIjB2C,MAAM,iBACN3C,GAAa,WAgBvB,OAJAjD,qBAAU,WACR6E,MACC,CAACnD,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAMmE,OAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3F,UAAU,GAAOJ,EAAE,oBAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,cACpC,kBAAC,IAAD,CAAmBC,UAAU,IAC7B,kBAAC,IAAD,CACEA,UAAWX,EACXS,QAAS,kBAAMf,EAAQgB,KAAR,kBAAiBV,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAgBrB,UAAjC,aAEjB,kBAAC,IAAD,CACEgC,UAAWX,EACXS,QAAS,WACHT,GACFtB,EAAcsB,EAAerB,UAAU4C,YAAYtD,MAAK,WACtDkH,UAKR,kBAAC,IAAD,CACExE,UAAWX,EACXS,QAAS,kBAAMf,EAAQgB,KAAR,kBAAiBV,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAgBrB,UAAjC,eAEjB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBgC,UAAU,GAAOP,EAAE,iBACtC,kBAAC,IAAD,CAAmBK,QAAS,kBAAMf,EAAQgB,KAAR,QAClC,kBAAC,IAAD,CAAmBC,UAAU,GAAOP,EAAE,mBAG1C,kBAAC,IAAMgG,QAAP,KACG9C,EACC,yBAAKvC,MAAO,CAAEsF,UAAW,WAAzB,cAEA,kBAAC,IAAD,CACE1I,GAAG,QACH2I,QAAS,CACP,CACEH,OAAQ/F,EAAE,4BACVmG,SAAU,aAEZ,CACEJ,OAAQ/F,EAAE,gCACVmG,SAAU,sBAEZ,CACEJ,OAAQ/F,EAAE,+BACVmG,SAAU,gBAEZ,CACEJ,OAAQ/F,EAAE,8BACVmG,SAAU,eAEZ,CACEJ,OAAQ/F,EAAE,gCACVmG,SAAU,iBAEZ,CACEJ,OAAQ/F,EAAE,8BACVmG,SAAU,eAEZ,CACEJ,OAAQ/F,EAAE,0BACVmG,SAAU,WAEZ,CACEJ,OAAQ/F,EAAE,yBACVmG,SAAU,eAEZ,CACEJ,OAAQ/F,EAAE,8BACVmG,SAAU,qBAGdpI,KAAM8G,EACNuB,YAAa,SAACC,GACZnI,QAAQC,IAAIkI,GACoB,IAA5BA,EAAiBC,OACnBzG,EAAkBwG,EAAiB,IAEnCxG,OAAkByD,IAGtBiD,cAAe,SAACpG,GACdb,EAAQgB,KAAR,WAAiBH,EAAQ5B,UAAzB,kBCJCiI,EA7JE,WAAO,IAAD,MACflH,EAAUC,cACVhB,EAAciB,cAAdjB,UACAuB,EAAgBC,qBAAWb,GAHZ,EAIuBO,qBAJvB,mBAIdG,EAJc,KAIEC,EAJF,KAKbG,EAAMC,cAAND,EAEF0B,EAAW,SAAC3D,GACZQ,GPwCqB,SAC3BA,EACA4B,GAEA,IAAM3C,EAAG,UAAMH,EAAN,oBAAyBkB,EAAzB,KAET,OAAO,IAAIH,SAAiB,SAACI,EAASH,GACpCZ,IACGgJ,IAAIjJ,EAAK2C,EAAS,CAEjBzB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,IAEAH,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,SO7DzB6H,CAAcnI,EAAU4C,WAAYpD,GAAMF,MAAK,WAC7CyB,EAAQgB,KAAR,WAAiB/B,EAAjB,gBAKN2B,qBAAU,WACR5C,EAAWiB,GAAWV,MAAK,SAACsC,GAC1BN,EAAkBM,QAEnB,IAEH,IAAM2B,EAASC,YAAyB,CACtCC,cAAe,CACbhB,aAA2B,OAAdpB,QAAc,IAAdA,OAAA,EAAAA,EAAgBoB,aAAhB,OACTpB,QADS,IACTA,OADS,EACTA,EAAgBoB,YAChB,GACJC,eAA6B,OAAdrB,QAAc,IAAdA,OAAA,EAAAA,EAAgBqB,eAAhB,OACXrB,QADW,IACXA,OADW,EACXA,EAAgBqB,cAChB,GACJK,aAA2B,OAAd1B,QAAc,IAAdA,OAAA,EAAAA,EAAgB0B,aAAhB,OACT1B,QADS,IACTA,OADS,EACTA,EAAgB0B,YAChB,IAENI,SAAU,SAACO,GACTP,EAASO,IAEX0E,oBAAoB,IAGtB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKvG,UAAU,GAAOJ,EAAE,oBAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,cACpC,kBAAC,IAAD,CACED,QAAS,WACP,IAAI6B,EAASC,SAASC,eAAe,eACjCF,GACFA,EAAOG,WAIb,kBAAC,IAAD,CAAmB9B,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEF,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,eAEjB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE8B,QAAS,WACP,IAAItB,EAAQ,OAAGe,QAAH,IAAGA,OAAH,EAAGA,EAAeU,QAC9BlB,EAAQgB,KAAR,gBAAsBvB,EAAtB,2BAGDiB,EAAE,iBAEL,kBAAC,IAAD,CAAmBK,QAAS,kBAAMf,EAAQgB,KAAR,QAClC,kBAAC,IAAD,CAAmBC,UAAU,GAC1BP,EAAE,kBAGP,kBAAC,IAAD,CAAMzC,GAAG,YAAYmE,SAAUI,EAAOQ,cACpC,kBAAC,IAAK7B,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,4BAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASqF,UAAW,SAAhD,OACGrG,QADH,IACGA,OADH,EACGA,EAAgBrB,YAGrB,kBAAC,IAAKkC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,gCAAf,KACA,kBAAC,IAAKU,MAAN,CACEC,MAAO,CACLC,MAAO,QACPqF,UAAW,SAHf,OAMGrG,QANH,IAMGA,GANH,UAMGA,EAAgBkB,qBANnB,aAMG,EAA+BC,OAGpC,kBAAC,IAAKN,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAD,CACEW,MAAO,CAAEC,MAAO,QAASqF,UAAW,QACpCW,aAAY,OAAEhH,QAAF,IAAEA,OAAF,EAAEA,EAAgBoB,YAC9BD,KAAK,cACLwB,MAAOT,EAAOG,OAAOjB,YACrBwB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,gCAAf,KACA,kBAAC,IAAD,CACEW,MAAO,CAAEC,MAAO,QAASqF,UAAW,QACpCW,aAAY,OAAEhH,QAAF,IAAEA,OAAF,EAAEA,EAAgBqB,cAC9BF,KAAK,gBACLwB,MAAOT,EAAOG,OAAOhB,cACrBuB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,0BAAf,KACA,kBAAC,IAAKU,MAAN,CACEC,MAAO,CACLC,MAAO,QACPqF,UAAW,UAGE,OAAdrG,QAAc,IAAdA,OAAA,EAAAA,EAAgBsB,QAAQC,YAAa,IAAIC,KAAJ,OAASxB,QAAT,IAASA,OAAT,EAASA,EAAgBsB,QAAQC,YAAYE,qBAAuB,KAG9G,kBAAC,IAAKZ,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAD,CACEW,MAAO,CAAEC,MAAO,QAASqF,UAAW,QACpCW,aAAY,OAAEhH,QAAF,IAAEA,OAAF,EAAEA,EAAgB0B,YAC9BP,KAAK,cACLwB,MAAOT,EAAOG,OAAOX,YACrBkB,SAAUV,EAAOW,gBAGrB,kBAAC,IAAKhC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,yBAAf,KACA,kBAAC,IAAKU,MAAN,CAAYC,MAAO,CAAEC,MAAO,QAASqF,UAAW,SAAhD,OACGrG,QADH,IACGA,GADH,UACGA,EAAgB2B,cADnB,aACG,EAAwBR,OAG7B,kBAAC,IAAKN,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,8BAAf,KACA,kBAAC,IAAKU,MAAN,CACEC,MAAO,CACLC,MAAO,QACPqF,UAAW,SAHf,OAMGrG,QANH,IAMGA,GANH,UAMGA,EAAgB4B,mBANnB,aAMG,EAA6BT,OAGlC,kBAAC,IAAKN,MAAN,KACE,2BAAOlD,GAAG,cAAcmF,KAAK,SAASC,QAAQ,QCjDzCkE,EAvGgB,WAC7B,IAAMjF,EAAW4C,cACXlF,EAAUC,cAFmB,EAGWE,oBAAkB,GAH7B,mBAG5BC,EAH4B,KAGXC,EAHW,OAIaF,qBAJb,mBAI5BqH,EAJ4B,KAIVC,EAJU,OAKLtH,qBALK,mBAK5BuH,EAL4B,KAKnBC,EALmB,KAM7B1I,EAAciB,cAAdjB,UACEyB,EAAMC,cAAND,EAEF+E,EAAO,WACPxG,GJlB0B,SAChCA,GAEA,IAAMf,EAAG,UAAMH,EAAN,oBAAyBkB,EAAzB,oBAET,OADAd,IAAMC,SAASC,iBANO,EAOfF,IACJG,IACCJ,GAGDK,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAEN,OAAOG,QAAQC,OAAOJ,MIMtBiJ,CAAmBtC,SAASrG,IAAYV,MAAK,SAACsJ,GAC5CJ,EAAoBI,OAW1B,OANAjH,qBAAU,WACR6E,MACC,CAACnD,IAEJ1D,QAAQC,IAAI,UAGV,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiC,SAAUV,EACVW,QAAS,WACPV,GAAmB,GACnBL,EAAQgB,KAAR,WAAiB/B,EAAjB,cAGDyB,EAAE,mBAEL,kBAAC,IAAD,CACEI,UAAWV,EACXW,QAAS,WACPV,GAAmB,KAGpBK,EAAE,4BAGP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,+BACpC,kBAAC,IAAD,CACEgC,UAAWyG,EACX3G,QAAS,YACI,OAAP2G,QAAO,IAAPA,OAAA,EAAAA,EAASzI,YAAayI,EAAQnE,kBAChCD,EAAoB,OAACoE,QAAD,IAACA,OAAD,EAACA,EAASzI,UAAV,OAAqByI,QAArB,IAAqBA,OAArB,EAAqBA,EAASnE,kBAAkBhF,MAAK,WACvEkH,UAKR,kBAAC,IAAD,CACExE,UAAWyG,EACX3G,QAAS,kBACPf,EAAQgB,KAAR,kBACM0G,QADN,IACMA,OADN,EACMA,EAASzI,UADf,mCAC4CyI,QAD5C,IAC4CA,OAD5C,EAC4CA,EAASnE,iBADrD,eAKJ,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBtC,UAAU,GAAOP,EAAE,iBACtC,kBAAC,IAAD,CACEO,UAAU,EACVF,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,+BAEjB,kBAAC,IAAD,CAAmBgC,UAAU,GAAOP,EAAE,kBAExC,kBAAC,IAAD,CACEzC,GAAG,QACH2I,QAAS,CACP,CACEH,OAAQ/F,EAAE,4CACVmG,SAAU,qBAEZ,CACEJ,OAAQ/F,EAAE,kCACVmG,SAAU,YAGdpI,KAAM+I,GAAsC,GAC5CV,YAAa,SAAChG,GACZlC,QAAQC,IAAIiC,GACY,IAApBA,EAASkG,OACXW,EAAW7G,EAAS,IAEpB6G,OAAW3D,IAGfiD,cAAe,SAACa,GACd9H,EAAQgB,KAAR,WACM8G,EAAe7I,UADrB,4BACkD6I,EAAevE,iBADjE,iBCnCKwE,EA3DkB,WAAO,IAC/BrH,EAAKC,cAALD,EACDV,EAAUC,cAFqB,EAGDC,cAA/BjB,EAHgC,EAGhCA,UAAWsE,EAHqB,EAGrBA,iBAHqB,EAISpD,oBAAkB,GAJ3B,mBAI9BC,EAJ8B,aAKOD,sBALP,mBAK9B2H,EAL8B,KAKdE,EALc,KAerC,OARApH,qBAAU,WACJ3B,GAAasE,GL6CY,SAC/BtE,EACAsE,GAEA,IAAMrF,EAAG,UAAMH,EAAN,oBAAyBkB,EAAzB,4BAAsDsE,GAG/D,OAFApF,IAAMC,SAASC,iBApEO,EAsEfF,IACJG,IAAIJ,EAAK,CAERkB,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAEN,OAAOG,QAAQC,OAAOJ,MK9DtBsJ,CAAkB3C,SAASrG,GAAYsE,GAAkBhF,MAAK,SAAAuJ,GAC5DE,EAAkBF,QAGrB,IAGC,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKhH,SAAUV,EAAiBW,QAAS,WACvCf,EAAQgB,KAAR,WAAiB/B,EAAjB,cAECyB,EAAE,mBAEL,kBAAC,IAAD,CAAKI,UAAWV,GACbM,EAAE,4BAGP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACIK,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,+BACnB,kBAAC,IAAD,CAAqB8B,QAAS,WACxB9B,GAAasE,GACfD,EAAqBgC,SAASrG,GAAYqG,SAAS/B,IAAmBhF,MAAK,WACzEyB,EAAQgB,KAAR,WAAiB/B,EAAjB,2BAIN,kBAAC,IAAD,CAAmBgC,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBF,QAAS,WAC1Bf,EAAQgB,KAAR,WAAiB/B,EAAjB,uBACEyB,EAAE,iBACN,kBAAC,IAAD,CAAmBO,UAAU,IAC7B,kBAAC,IAAD,CAAmBA,UAAU,GAAOP,EAAE,kBAExC,kBAAC,IAAD,KACE,kBAAC,IAAKS,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,6CACf,kBAAC,IAAKU,MAAN,YAAa0G,QAAb,IAAaA,OAAb,EAAaA,EAAgBI,oBAE/B,kBAAC,IAAK/G,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,mCACf,kBAAC,IAAKU,MAAN,YAAa0G,QAAb,IAAaA,OAAb,EAAaA,EAAgBlG,aCmD1BuG,EAhGkB,WAAO,IAC/BzH,EAAKC,cAALD,EACDV,EAAUC,cACXhB,EAAaiB,cAAbjB,UAHgC,EAKGkB,qBALH,mBAKhCuD,EALgC,KAKjBC,EALiB,KAO/BvB,EAAW,SAAC3D,GACZQ,GNN4B,SAClCA,EACAmJ,GAEA,IAAMlK,EAAG,UAAMH,EAAN,oBAAyBkB,EAAzB,oBAGT,OAFAd,IAAMC,SAASC,iBAxBO,EA0Bf,IAAIS,SAAwB,SAACI,EAASH,GAC3CZ,IACGkE,KAAKnE,EAAKkK,EAAsB,CAE/BhJ,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASc,OAAgB,CAC3B,IAAIgD,EAAmB9D,EAASY,QAAT,SAEvBjB,IACGG,IAAIgE,EAAU,CAEblD,QAAS,CACPC,OAAQ,iCACR,eAAgB,oCAGnBd,MAAK,SAACC,GACD,MAAQA,EAASc,OACnBJ,EAAQV,EAASC,MAEjBM,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,WAE3BR,EAAOP,MAGVE,OAAM,SAACa,GAAD,OAAWR,EAAOQ,SMjCzB8I,CAAqB/C,SAASrG,GAAYR,GAAMF,MAAK,SAAA0E,GACnDjD,EAAQgB,KAAR,WAAiBiC,EAAMhE,UAAvB,4BAAoDgE,EAAMM,iBAA1D,gBAKN3C,qBAAU,WACR4C,IAA0BjF,MAAK,SAACuF,GAC9BH,EAAiBG,QAElB,IAEH,IAAMtB,EAASC,YAAgC,CAC7CC,cAAe,CACb4F,kBAAmB,IAErBlG,SAAU,SAACO,GACTP,EAASO,MAIb,OACI,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK7B,UA7BW,EA6BgBC,QAAS,WACvCf,EAAQgB,KAAK,OAEZN,EAAE,mBAEL,kBAAC,IAAD,CAAKI,UAAU,GACZJ,EAAE,4BAGP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBK,QAAS,kBAAMf,EAAQgB,KAAR,cACpC,kBAAC,IAAD,CAAmBD,QAAS,WAC1B,IAAI6B,EAASC,SAASC,eAAe,wBACjCF,GACFA,EAAOG,WAGX,kBAAC,IAAD,CAAmBhC,QAAS,kBAAMf,EAAQgB,KAAR,WAAiB/B,EAAjB,aAClC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBgC,UAAU,IAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBF,QAAS,kBAAMf,EAAQuI,WAAW7H,EAAE,iBACvD,kBAAC,IAAD,CAAmBK,QAAS,kBAAMf,EAAQgB,KAAR,QAClC,kBAAC,IAAD,CAAmBC,UAAU,GAAOP,EAAE,kBAExC,kBAAC,IAAD,CAAM0B,SAAUI,EAAOQ,cACrB,kBAAC,IAAK7B,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,EAAE,6CACf,4BACIe,KAAK,oBACLwB,MAAOT,EAAOG,OAAO2F,kBACrBpF,SAAUV,EAAOW,cAEnB,4BAAQF,WAAOe,IACdN,EAAgBA,EAAcoB,KAAI,SAAAC,GACjC,OAAO,4BAAQyD,IAAKzD,EAAO9B,MAAOA,MAAO8B,EAAO9B,OAAQ8B,EAAOtD,SAC5D,OAmBT,kBAAC,IAAKN,MAAN,KACE,2BAAOiC,KAAK,SAASnF,GAAG,uBAAuBoF,QAAQ,QCrG7DoF,EAAS,kBACb,6BACE,6CAIJ,SAASC,IAAQ,IAAD,EACM/H,cAATgI,GADG,EACNjI,EADM,EACHiI,MACLC,EAAW,IAAIzD,gBAAgB0D,OAAOvG,SAAS8C,QAAQ9G,IAAI,UAFnD,EAGkB6B,mBAAiB,IAHnC,mBAGPV,EAHO,KAGGqJ,EAHH,OAI8B3I,mBAAgC,IAJ9D,mBAIPuF,EAJO,KAISqD,EAJT,KAMRC,EAAwC,CAC5C9H,MAD4C,WAE1C,OAAOzB,GAET8G,MAJ4C,SAItC9G,GACJqJ,EAAYrJ,IAEdsE,YAP4C,WAQ1C,OAAO2B,GAETY,YAV4C,SAUhCT,GACVkD,EAAkBlD,KAUtB,OANAjF,qBAAU,WACJgI,GACFD,EAAKM,eAAeL,KAErB,CAACA,IAGF,kBAAChJ,EAAcsJ,SAAf,CAAwBjG,MAAO+F,GAC7B,kBAAC,IAAD,CAAeG,SAAQ,UAAKC,qBAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9F,IACjC,kBAAC,IAAD,CAAO4F,KAAK,UAAUC,OAAK,EAACC,UAAWpH,IACvC,kBAAC,IAAD,CAAOkH,KAAK,mBAAmBC,OAAK,EAACC,UAAWrC,IAChD,kBAAC,IAAD,CAAOmC,KAAK,qBAAqBE,UAAWxJ,IAC5C,kBAAC,IAAD,CAAOsJ,KAAK,QAAQE,UAAWtE,IAC/B,kBAAC,IAAD,CAAOoE,KAAK,8BAA8BC,OAAK,EAACC,UAAWhC,IAC3D,kBAAC,IAAD,CACE8B,KAAK,uDACLE,UAAWxB,IAEb,kBAAC,IAAD,CACEsB,KAAK,qCACLC,OAAK,EACLC,UAAWpB,OAQvB,IAQeqB,EARH,WACV,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACf,EAAD,QChEcgB,QACW,cAA7Bb,OAAOvG,SAASqH,UAEe,UAA7Bd,OAAOvG,SAASqH,UAEhBd,OAAOvG,SAASqH,SAASC,MACvB,2D,wCCbNjB,IAGGkB,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,QAAS,CACPC,SAAS,GAAD,OAAKf,mBAAL,sCAEVgB,YAAa,QACbC,OAAO,EAEPC,cAAe,CACbC,aAAa,KAIJ5B,EAAf,ECnBA6B,IAASC,OAEP,kBAAC,EAAD,MAEA5H,SAASC,eAAe,SF8HpB,kBAAmB4H,WACrBA,UAAUC,cAAcC,MACrBrM,MAAK,SAAAsM,GACJA,EAAaC,gBAEdpM,OAAM,SAAAa,GACLX,QAAQW,MAAMA,EAAMwL,c","file":"static/js/main.16ccf165.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  Feature,\r\n  FeatureCreate,\r\n  FeatureSearchTemplate,\r\n  FeatureUpdate,\r\n} from \"./FeatureInterface\";\r\nimport { SearchRequest } from \"../types\";\r\n\r\nconst API_URL = \"https://jepria-spring-feature.herokuapp.com\";\r\nconst USER = \"user\";\r\nconst PASSWORD = \"123\";\r\nconst withCredentials = false;\r\n\r\nexport const getFeature = (id?: string): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${id}/`;\r\n\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n    .get(\r\n      url\r\n      // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const createFeature = (feature: FeatureCreate): Promise<Feature> => {\r\n  const url = `${API_URL}/feature`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios\r\n      .post(url, feature, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (201 === response.status) {\r\n          let location: string = response.headers[\"location\"];\r\n          console.log(\"location\" + location);\r\n          axios\r\n            .get(location, {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                Accept: \"application/json;charset=utf-8\",\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (200 === response.status) {\r\n                resolve(response.data);\r\n              } else {\r\n                reject(response);\r\n              }\r\n            })\r\n            .catch((error) => reject(error));\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const updateFeature = (\r\n  featureId: string,\r\n  feature: FeatureUpdate\r\n): Promise<Feature> => {\r\n  const url = `${API_URL}/feature/${featureId}/`;\r\n\r\n  return new Promise<Feature>((resolve, reject) => {\r\n    axios\r\n      .put(url, feature, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const deleteFeature = (featureId: string): Promise<void> => {\r\n  const url = `${API_URL}/feature/${featureId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios\r\n      .delete(url, {\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const postSearchRequest = (\r\n  searchRequest: SearchRequest<FeatureSearchTemplate>\r\n) => {\r\n  const url = `${API_URL}/feature/search`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  console.log(searchRequest);\r\n  return new Promise<string>((resolve, reject) => {\r\n    axios\r\n      .post(url, searchRequest, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (201 === response.status) {\r\n          let location: string = response.headers[\"location\"];\r\n          console.log(response);\r\n          resolve(location.split(\"/\").pop());\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const searchFeatures = (\r\n  searchId: string,\r\n  pageSize: number,\r\n  page: number\r\n): Promise<Array<Feature>> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset?pageSize=${pageSize}&page=${page}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<Array<Feature>>((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve(response.data);\r\n        } else if (204 === response.status) {\r\n          resolve([]);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getResultSetSize = (searchId: string): Promise<number> => {\r\n  const url = `${API_URL}/feature/search/${searchId}/resultset-size`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return new Promise<number>((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve(response.data);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { FeatureSearchTemplate } from \"./api/feature/FeatureInterface\";\r\n\r\nexport interface SearchContextInterface {\r\n  getId(): string;\r\n  setId(searchId: string): void;\r\n  getTemplate(): FeatureSearchTemplate;\r\n  setTemplate(template: FeatureSearchTemplate): void;\r\n}\r\n\r\nexport const SearchContext = React.createContext<SearchContextInterface | null>(null);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Label } from \"@jfront/ui-core\";\r\nimport { deleteFeature, getFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DetailPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(true);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const searchContext = useContext(SearchContext);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab\r\n          selected={mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(true);\r\n          }}\r\n        >\r\n          {t(\"feature.header\")}\r\n        </Tab>\r\n        <Tab\r\n          selected={!mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(false);\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}\r\n        >\r\n          {t(\"feature-process.header\")}\r\n        </Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave disabled={true} />\r\n        <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)} />\r\n        <ToolbarButtonDelete\r\n          onClick={() => {\r\n            if (featureId) {\r\n              deleteFeature(featureId).then(() => {\r\n                let searchId = searchContext?.getId();\r\n                if (searchId) {\r\n                  history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n                } else {\r\n                  history.push(`/`);\r\n                }\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getId();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            } else {\r\n              history.push(\"/\");\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureId\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>{currentFeature?.featureId}</Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureStatus\")}:</Form.Label>\r\n          <Form.Label\r\n            style={{\r\n              width: \"350px\",\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureName\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>{currentFeature?.featureName}</Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureNameEn\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>\r\n            {currentFeature?.featureNameEn}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.dateIns\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>\r\n            {currentFeature?.dateIns.toString()\r\n              ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString()\r\n              : \"\"}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.description\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>{currentFeature?.description}</Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.author\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", justifyContent: \"flex-start\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>Порядок выполнения:</Form.Label>\r\n          <Form.Label />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.responsible\")}:</Form.Label>\r\n          <Form.Label\r\n            style={{\r\n              width: \"350px\",\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React, { useContext } from \"react\";\r\nimport { Form } from \"@jfront/ui-core\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FeatureCreate } from \"../../../api/feature/FeatureInterface\";\r\nimport { createFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TextInput } from \"@jfront/ui-core\";\r\n\r\nconst CreatePage = () => {\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureCreate) => {\r\n    createFeature(data).then((feature) => {\r\n      history.push(`/${feature.featureId}/detail`);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik<FeatureCreate>({\r\n    initialValues: {\r\n      description: \"\",\r\n      featureName: \"\",\r\n      featureNameEn: \"\",\r\n    },\r\n    onSubmit: (values: FeatureCreate) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate disabled={true} />\r\n        <ToolbarButtonSave\r\n          onClick={() => {\r\n            let button = document.getElementById(\"create-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete disabled={true} />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getId();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form id=\"create-form\" onSubmit={formik.handleSubmit}>\r\n        <Form.Field>\r\n        <Form.Label>{t(\"feature.fields.featureName\")}</Form.Label>\r\n          <TextInput\r\n            name=\"featureName\"\r\n            value={formik.values.featureName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureNameEn\")}</Form.Label>\r\n          <TextInput\r\n            name=\"featureNameEn\"\r\n            value={formik.values.featureNameEn}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.description\")}:</Form.Label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <input id=\"create-submit\" type=\"submit\" hidden={true} />\r\n        </Form.Field>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePage;\r\n","import axios from \"axios\";\r\nimport {\r\n  FeatureProcess,\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions,\r\n} from \"./FeatureProcessInterface\";\r\n\r\nconst API_URL = \"https://jepria-spring-feature.herokuapp.com\";\r\nconst USER = \"user\";\r\nconst PASSWORD = \"123\";\r\nconst withCredentials = false;\r\n\r\nexport const findFeatureProcess = (\r\n  featureId: number\r\n): Promise<FeatureProcess[]> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n  return axios\r\n    .get(\r\n      url\r\n      // {auth: {username: `${USER}`, password: `${PASSWORD}`}}\r\n    )\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      // console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const createFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessCreate: FeatureProcessCreate\r\n): Promise<FeatureProcess> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<FeatureProcess>((resolve, reject) => {\r\n    axios\r\n      .post(url, featureProcessCreate, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          let location: string = response.headers[\"location\"];\r\n          // console.log(\"location\" + location);\r\n          axios\r\n            .get(location, {\r\n              // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n              headers: {\r\n                Accept: \"application/json;charset=utf-8\",\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (200 === response.status) {\r\n                resolve(response.data);\r\n              } else {\r\n                reject(response);\r\n              }\r\n            })\r\n            .catch((error) => reject(error));\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessId: string\r\n): Promise<FeatureProcess> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n    .get(url, {\r\n      // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      // console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n\r\nexport const deleteFeatureProcess = (\r\n  featureId: number,\r\n  featureProcessId: number\r\n): Promise<void> => {\r\n  const url = `${API_URL}/feature/${featureId}/feature-process/${featureProcessId}`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    axios\r\n      .delete(url, {\r\n        // auth: {username: `${USER}`, password: `${PASSWORD}`},\r\n        headers: {\r\n          Accept: \"application/json;charset=utf-8\",\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (200 === response.status) {\r\n          resolve();\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const getFeatureStatusOptions = (): Promise<FeatureStatusOptions[]> => {\r\n  const url = `${API_URL}/feature/option/feature-status`;\r\n  axios.defaults.withCredentials = withCredentials;\r\n\r\n  return axios\r\n    .get(url, {\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n    })\r\n    .then((response) => response.data)\r\n    .catch((reason) => {\r\n      // console.log(reason);\r\n      return Promise.reject(reason);\r\n    });\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form } from \"@jfront/ui-core\";\r\nimport { FeatureSearchTemplate } from \"../../../api/feature/FeatureInterface\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { FeatureStatusOptions } from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport { getFeatureStatusOptions } from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { DatePicker } from \"@jfront/ui-core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckBoxGroup } from \"@jfront/ui-core\";\r\nimport { CheckBox } from \"@jfront/ui-core\";\r\nimport queryString from \"query-string\";\r\nimport { TextInput } from \"@jfront/ui-core\";\r\n\r\nconst SearchPage = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const searchContext = useContext(SearchContext);\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const onSubmit = (data: FeatureSearchTemplate) => {\r\n    if (!data.featureId) {\r\n      data.featureId = undefined;\r\n    }\r\n    if (!data.dateInsFrom) {\r\n      data.dateInsFrom = undefined;\r\n    }\r\n    if (!data.dateInsTo) {\r\n      data.dateInsTo = undefined;\r\n    }\r\n\r\n    let query = queryString.stringify(data);\r\n    if (query) {\r\n      query = \"&\" + query;\r\n    }\r\n    history.push(`/list/?pageSize=25&page=1${query}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik<FeatureSearchTemplate>({\r\n    initialValues: searchContext.getTemplate(),\r\n    onSubmit: (values: FeatureSearchTemplate) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave disabled={true} />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete disabled={true} />\r\n        <ToolbarButtonView disabled={true} />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase //TODO: think about code bellow\r\n          disabled={!searchContext?.getId()}\r\n          onClick={() => {\r\n            let searchId = searchContext?.getId();\r\n            if (searchId) {\r\n              history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind disabled={true} />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let button = document.getElementById(\"search-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        >\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Form.Field style={{ display: \"inline-block\" }}>\r\n          <Form.Label>{t(\"feature.fields.featureId\")}:</Form.Label>\r\n          <TextInput\r\n            name=\"featureId\"\r\n            value={formik.values.featureId}\r\n            onChange={formik.handleChange}\r\n            type=\"number\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureNameTemplate\")}:</Form.Label>\r\n          <TextInput\r\n            name=\"featureNameTemplate\"\r\n            value={formik.values.featureNameTemplate}\r\n            onChange={formik.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureNameEnTemplate\")}:</Form.Label>\r\n          <TextInput\r\n            name=\"featureNameEnTemplate\"\r\n            value={formik.values.featureNameEnTemplate}\r\n            onChange={formik.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.dateInsFrom\")}</Form.Label>\r\n          <DatePicker\r\n            name=\"dateInsFrom\"\r\n            selected={formik.values.dateInsFrom}\r\n            onChange={(date) => {\r\n              formik.setFieldValue(\"dateInsFrom\", date);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.dateInsTo\")}</Form.Label>\r\n          <DatePicker\r\n            name=\"dateInsTo\"\r\n            selected={formik.values.dateInsTo}\r\n            onChange={(date) => {\r\n              formik.setFieldValue(\"dateInsTo\", date);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.statusCodeList\")}</Form.Label>\r\n          <CheckBoxGroup\r\n            name=\"statusCodeList\"\r\n            values={formik.values.statusCodeList ? formik.values.statusCodeList : []}\r\n            style={{ width: \"142px\" }}\r\n            onChange={(name, newValue) => {\r\n              formik.setFieldValue(\"statusCodeList\", newValue);\r\n            }}\r\n            isLoading={isLoading}\r\n          >\r\n            {statusOptions\r\n              ? statusOptions.map((option) => {\r\n                  return <CheckBox value={option.value} label={option.name} />;\r\n                })\r\n              : null}\r\n          </CheckBoxGroup>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <input id=\"search-submit\" type=\"submit\" hidden={true} />\r\n        </Form.Field>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Feature, FeatureSearchTemplate } from \"../../../api/feature/FeatureInterface\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  deleteFeature,\r\n  getResultSetSize,\r\n  searchFeatures,\r\n  postSearchRequest,\r\n} from \"../../../api/feature/FeatureApi\";\r\nimport { Grid } from \"@jfront/ui-core\";\r\nimport { Panel } from \"@jfront/ui-core\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport queryString from \"query-string\";\r\nimport { SearchRequest } from \"../../../api/types\";\r\nimport { SearchContext } from \"../../../context\";\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst ListPage = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let query = useQuery();\r\n  const [searchSize, setSearchSize] = useState<number>(25);\r\n  const pageSize: number = parseInt(query.get(\"pageSize\") as string);\r\n  const page: number = parseInt(query.get(\"page\") as string);\r\n  const [features, setFeatures] = useState<Feature[]>([]);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n  const searchContext = useContext(SearchContext);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const find = () => {\r\n    let searchTemplate = queryString.parse(location.search);\r\n    if (searchTemplate.page) {\r\n      searchTemplate.page = undefined;\r\n    }\r\n    if (searchTemplate.pageSize) {\r\n      searchTemplate.pageSize = undefined;\r\n    }\r\n\r\n    let searchRequest: SearchRequest<FeatureSearchTemplate> = {\r\n      template: searchTemplate,\r\n    };\r\n\r\n    if (\r\n      !Object.is(\r\n        JSON.stringify(searchContext.getTemplate()),\r\n        JSON.stringify(queryString.parse(location.search))\r\n      )\r\n    ) {\r\n      postSearchRequest(searchRequest).then((searchId) => {\r\n        setIsLoading(true);\r\n        getResultSetSize(searchId).then((resultSize) => {\r\n          if (resultSize > 0) {\r\n            searchContext.setTemplate(searchRequest.template);\r\n            searchContext.setId(searchId);\r\n\r\n            setSearchSize(resultSize);\r\n            if (searchId) {\r\n              searchFeatures(searchId, pageSize, page).then((features) => {\r\n                setFeatures(features);\r\n                setIsLoading(false);\r\n              });\r\n            }\r\n          } else {\r\n            alert(\"Search empty!\");\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      searchFeatures(searchContext.getId(), pageSize, page).then((features) => {\r\n        setFeatures(features);\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    find();\r\n  }, [location]);\r\n\r\n  return (\r\n    <Panel>\r\n      <Panel.Header>\r\n        <TabPanel>\r\n          <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n          <ToolbarButtonSave disabled={true} />\r\n          <ToolbarButtonEdit\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/edit`)}\r\n          />\r\n          <ToolbarButtonDelete\r\n            disabled={!currentFeature}\r\n            onClick={() => {\r\n              if (currentFeature) {\r\n                deleteFeature(currentFeature.featureId.toString()).then(() => {\r\n                  find();\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <ToolbarButtonView\r\n            disabled={!currentFeature}\r\n            onClick={() => history.push(`/${currentFeature?.featureId}/detail`)}\r\n          />\r\n          <ToolbarSplitter />\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n      </Panel.Header>\r\n      <Panel.Content>\r\n        {isLoading ? (\r\n          <div style={{ textAlign: \"center\" }}>Loading...</div>\r\n        ) : (\r\n          <Grid\r\n            id=\"table\"\r\n            columns={[\r\n              {\r\n                Header: t(\"feature.fields.featureId\"),\r\n                accessor: \"featureId\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.featureStatus\"),\r\n                accessor: \"featureStatus.name\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.workSequence\"),\r\n                accessor: \"workSequence\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.featureName\"),\r\n                accessor: \"featureName\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.featureNameEn\"),\r\n                accessor: \"featureNameEn\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.description\"),\r\n                accessor: \"description\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.dateIns\"),\r\n                accessor: \"dateIns\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.author\"),\r\n                accessor: \"author.name\",\r\n              },\r\n              {\r\n                Header: t(\"feature.fields.responsible\"),\r\n                accessor: \"responsible.name\",\r\n              },\r\n            ]}\r\n            data={features}\r\n            onSelection={(selectedFeatures) => {\r\n              console.log(selectedFeatures);\r\n              if (selectedFeatures.length === 1) {\r\n                setCurrentFeature(selectedFeatures[0]);\r\n              } else {\r\n                setCurrentFeature(undefined);\r\n              }\r\n            }}\r\n            onDoubleClick={(feature) => {\r\n              history.push(`/${feature.featureId}/detail`);\r\n            }}\r\n          />\r\n        )}\r\n      </Panel.Content>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form } from \"@jfront/ui-core\";\r\nimport { TextInput } from \"@jfront/ui-core\";\r\nimport { getFeature, updateFeature } from \"../../../api/feature/FeatureApi\";\r\nimport { Feature, FeatureUpdate } from \"../../../api/feature/FeatureInterface\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { SearchContext } from \"../../../context\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditPage = () => {\r\n  const history = useHistory();\r\n  let { featureId } = useParams();\r\n  const searchContext = useContext(SearchContext);\r\n  const [currentFeature, setCurrentFeature] = useState<Feature>();\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = (data: FeatureUpdate) => {\r\n    if (featureId) {\r\n      updateFeature(featureId.toString(), data).then(() => {\r\n        history.push(`/${featureId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeature(featureId).then((feature) => {\r\n      setCurrentFeature(feature);\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik<FeatureUpdate>({\r\n    initialValues: {\r\n      featureName: currentFeature?.featureName\r\n        ? currentFeature?.featureName\r\n        : \"\",\r\n      featureNameEn: currentFeature?.featureNameEn\r\n        ? currentFeature?.featureNameEn\r\n        : \"\",\r\n      description: currentFeature?.description\r\n        ? currentFeature?.description\r\n        : \"\",\r\n    },\r\n    onSubmit: (values: FeatureUpdate) => {\r\n      onSubmit(values);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab selected={true}>{t(\"feature.header\")}</Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/create`)} />\r\n        <ToolbarButtonSave\r\n          onClick={() => {\r\n            let button = document.getElementById(\"edit-submit\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonEdit disabled={true} />\r\n        <ToolbarButtonDelete />\r\n        <ToolbarButtonView\r\n          onClick={() => history.push(`/${featureId}/detail`)}\r\n        />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase\r\n          onClick={() => {\r\n            let searchId = searchContext?.getId();\r\n            history.push(`/list/${searchId}/?pageSize=25&page=1`);\r\n          }}\r\n        >\r\n          {t(\"toolbar.list\")}\r\n        </ToolbarButtonBase>\r\n        <ToolbarButtonFind onClick={() => history.push(`/`)} />\r\n        <ToolbarButtonBase disabled={true}>\r\n          {t(\"toolbar.find\")}\r\n        </ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Form id=\"edit-form\" onSubmit={formik.handleSubmit}>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureId\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.featureId}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureStatus\")}:</Form.Label>\r\n          <Form.Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.featureStatus?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureName\")}:</Form.Label>\r\n          <TextInput\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureName}\r\n            name=\"featureName\"\r\n            value={formik.values.featureName}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.featureNameEn\")}:</Form.Label>\r\n          <TextInput\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.featureNameEn}\r\n            name=\"featureNameEn\"\r\n            value={formik.values.featureNameEn}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.dateIns\")}:</Form.Label>\r\n          <Form.Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.dateIns.toString() ? new Date(currentFeature?.dateIns.toString()).toLocaleDateString() : \"\"}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.description\")}:</Form.Label>\r\n          <TextInput\r\n            style={{ width: \"350px\", textAlign: \"left\" }}\r\n            defaultValue={currentFeature?.description}\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.author\")}:</Form.Label>\r\n          <Form.Label style={{ width: \"350px\", textAlign: \"left\" }}>\r\n            {currentFeature?.author?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Form.Label>{t(\"feature.fields.responsible\")}:</Form.Label>\r\n          <Form.Label\r\n            style={{\r\n              width: \"350px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {currentFeature?.responsible?.name}\r\n          </Form.Label>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <input id=\"edit-submit\" type=\"submit\" hidden={true} />\r\n        </Form.Field>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter,\r\n} from \"@jfront/ui-core\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { Tab, TabPanel } from \"@jfront/ui-core\";\r\nimport { Grid } from \"@jfront/ui-core\";\r\nimport { FeatureProcess } from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  findFeatureProcess,\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst FeatureProcessListPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcesses, setFeatureProcesses] = useState<FeatureProcess[]>();\r\n  const [current, setCurrent] = useState<FeatureProcess>();\r\n  let { featureId } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  const find = () => {\r\n    if (featureId) {\r\n      findFeatureProcess(parseInt(featureId)).then((processes: FeatureProcess[]) => {\r\n        setFeatureProcesses(processes);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    find();\r\n  }, [location]);\r\n\r\n  console.log(\"Render\");\r\n\r\n  return (\r\n    <>\r\n      <TabPanel>\r\n        <Tab\r\n          selected={mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(true);\r\n            history.push(`/${featureId}/detail`);\r\n          }}\r\n        >\r\n          {t(\"feature.header\")}\r\n        </Tab>\r\n        <Tab\r\n          selected={!mainTabSelected}\r\n          onClick={() => {\r\n            setMainTabSelected(false);\r\n          }}\r\n        >\r\n          {t(\"feature-process.header\")}\r\n        </Tab>\r\n      </TabPanel>\r\n      <Toolbar>\r\n        <ToolbarButtonCreate onClick={() => history.push(`/${featureId}/feature-process/create`)} />\r\n        <ToolbarButtonDelete\r\n          disabled={!current}\r\n          onClick={() => {\r\n            if (current?.featureId && current.featureProcessId) {\r\n              deleteFeatureProcess(current?.featureId, current?.featureProcessId).then(() => {\r\n                find();\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <ToolbarButtonView\r\n          disabled={!current}\r\n          onClick={() =>\r\n            history.push(\r\n              `/${current?.featureId}/feature-process/${current?.featureProcessId}/detail`\r\n            )\r\n          }\r\n        />\r\n        <ToolbarSplitter />\r\n        <ToolbarButtonBase disabled={true}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n        <ToolbarButtonFind\r\n          disabled={true}\r\n          onClick={() => history.push(`/${featureId}/feature-process/search`)}\r\n        />\r\n        <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n      </Toolbar>\r\n      <Grid\r\n        id=\"table\"\r\n        columns={[\r\n          {\r\n            Header: t(\"feature-process.fields.featureStatusName\"),\r\n            accessor: \"featureStatusName\",\r\n          },\r\n          {\r\n            Header: t(\"feature-process.fields.dateIns\"),\r\n            accessor: \"dateIns\",\r\n          },          \r\n        ]}\r\n        data={featureProcesses ? featureProcesses : []} //todo: bug in library\r\n        onSelection={(selected) => {\r\n          console.log(selected);\r\n          if (selected.length === 1) {\r\n            setCurrent(selected[0]);\r\n          } else {\r\n            setCurrent(undefined);\r\n          }\r\n        }}\r\n        onDoubleClick={(featureProcess) => {\r\n          history.push(\r\n            `/${featureProcess.featureId}/feature-process/${featureProcess.featureProcessId}/detail`\r\n          );\r\n        }}\r\n      />      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeatureProcessListPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {FeatureProcess} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {\r\n  deleteFeatureProcess,\r\n  getFeatureProcess\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {Tab, TabPanel} from \"@jfront/ui-core\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"@jfront/ui-core\";\r\nimport {Form} from \"@jfront/ui-core\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessDetailPage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId, featureProcessId} = useParams();\r\n  const [mainTabSelected, setMainTabSelected] = useState<boolean>(false);\r\n  const [featureProcess, setFeatureProcess] = useState<FeatureProcess>();\r\n\r\n  useEffect(() => {\r\n    if (featureId && featureProcessId) {\r\n      getFeatureProcess(parseInt(featureId), featureProcessId).then(featureProcess => {\r\n        setFeatureProcess(featureProcess);\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(`/${featureId}/detail`);\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate\r\n              onClick={() => history.push(`/${featureId}/feature-process/create`)}/>\r\n          <ToolbarButtonDelete onClick={() => {\r\n            if (featureId && featureProcessId) {\r\n              deleteFeatureProcess(parseInt(featureId), parseInt(featureProcessId)).then(() => {\r\n                history.push(`/${featureId}/feature-process`);\r\n              });\r\n            }\r\n          }}/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => {\r\n            history.push(`/${featureId}/feature-process`);\r\n          }}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind disabled={true}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form>\r\n          <Form.Field>\r\n            <Form.Label>{t(\"feature-process.fields.featureStatusCode\")}</Form.Label>\r\n            <Form.Label>{featureProcess?.featureStatusName}</Form.Label>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Label>{t(\"feature-process.fields.dateIns\")}</Form.Label>\r\n            <Form.Label>{featureProcess?.dateIns}</Form.Label>\r\n          </Form.Field>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessDetailPage;","import React, {useEffect, useState} from \"react\";\r\nimport {Tab, TabPanel} from \"@jfront/ui-core\";\r\nimport {\r\n  Toolbar,\r\n  ToolbarButtonBase,\r\n  ToolbarButtonCreate,\r\n  ToolbarButtonDelete,\r\n  ToolbarButtonEdit,\r\n  ToolbarButtonFind,\r\n  ToolbarButtonSave,\r\n  ToolbarButtonView,\r\n  ToolbarSplitter\r\n} from \"@jfront/ui-core\";\r\nimport { ComboBox, ComboBoxItem } from \"@jfront/ui-core\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {\r\n  FeatureProcessCreate,\r\n  FeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessInterface\";\r\nimport {Form} from \"@jfront/ui-core\";\r\nimport {\r\n  createFeatureProcess,\r\n  getFeatureStatusOptions\r\n} from \"../../../api/feature-process/FeatureProcessApi\";\r\nimport {useFormik} from \"formik\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst FeatureProcessCreatePage = () => {\r\n  const {t} = useTranslation();\r\n  const history = useHistory();\r\n  let {featureId} = useParams();\r\n  const mainTabSelected = false;\r\n  let [statusOptions, setStatusOptions] = useState<FeatureStatusOptions[]>();\r\n\r\n  const onSubmit = (data: FeatureProcessCreate) => {\r\n    if (featureId) {\r\n      createFeatureProcess(parseInt(featureId), data).then(value => {\r\n        history.push(`/${value.featureId}/feature-process/${value.featureProcessId}/detail`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeatureStatusOptions().then((options) => {\r\n      setStatusOptions(options);\r\n    });\r\n  }, [])\r\n\r\n  const formik = useFormik<FeatureProcessCreate>({\r\n    initialValues: {\r\n      featureStatusCode: \"\"\r\n    },\r\n    onSubmit: (values: FeatureProcessCreate) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <TabPanel>\r\n          <Tab selected={mainTabSelected} onClick={() => {\r\n            history.push(\"/\")\r\n          }}>\r\n            {t(\"feature.header\")}\r\n          </Tab>\r\n          <Tab selected={!mainTabSelected}>\r\n            {t(\"feature-process.header\")}\r\n          </Tab>\r\n        </TabPanel>\r\n        <Toolbar>\r\n          <ToolbarButtonCreate onClick={() => history.push(`/create`)}/>\r\n          <ToolbarButtonSave onClick={() => {\r\n            let button = document.getElementById(\"feature-process-save\");\r\n            if (button) {\r\n              button.click();\r\n            }\r\n          }}/>\r\n          <ToolbarButtonEdit onClick={() => history.push(`/${featureId}/edit`)}/>\r\n          <ToolbarButtonDelete/>\r\n          <ToolbarButtonView disabled={true}/>\r\n          <ToolbarSplitter/>\r\n          <ToolbarButtonBase onClick={() => history.goBack()}>{t(\"toolbar.list\")}</ToolbarButtonBase>\r\n          <ToolbarButtonFind onClick={() => history.push(`/`)}/>\r\n          <ToolbarButtonBase disabled={true}>{t(\"toolbar.find\")}</ToolbarButtonBase>\r\n        </Toolbar>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Field>\r\n            <Form.Label>{t(\"feature-process.fields.featureStatusCode\")}</Form.Label>\r\n            <select \r\n                name=\"featureStatusCode\" \r\n                value={formik.values.featureStatusCode}\r\n                onChange={formik.handleChange}\r\n            >\r\n              <option value={undefined}></option>\r\n              {statusOptions ? statusOptions.map(option => {\r\n                return <option key={option.value} value={option.value}>{option.name}</option>\r\n              }) : null}\r\n            </select>\r\n            {/* <ComboBox \r\n              name=\"featureStatusCode\" \r\n              // value={formik.values.featureStatusCode}\r\n              onChangeValue={\r\n                (name, value) => {\r\n                  console.log(\"name = \" + name)\r\n                  console.log(\"value = \" + value)\r\n                  // formik.setFieldValue(\"featureStatusCode\", event.target.value)\r\n                }\r\n              }\r\n            >\r\n              <ComboBoxItem value={undefined} label=\"\"/>\r\n              {statusOptions ? statusOptions.map(option => {\r\n                return <ComboBoxItem key={option.value} value={option.value} label={option.name} />\r\n              }) : null}\r\n            </ComboBox> */}\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <input type=\"submit\" id=\"feature-process-save\" hidden={true}/>\r\n          </Form.Field>\r\n        </Form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default FeatureProcessCreatePage;","import React, { useState, Suspense, useEffect } from \"react\";\r\n\r\nimport DetailPage from \"./pages/feature/view/Detail\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport CreatePage from \"./pages/feature/create/Create\";\r\nimport SearchPage from \"./pages/feature/search/Search\";\r\nimport ListPage from \"./pages/feature/view/List\";\r\nimport EditPage from \"./pages/feature/edit/Edit\";\r\nimport FeatureProcessListPage from \"./pages/feature-process/view/List\";\r\nimport FeatureProcessDetailPage from \"./pages/feature-process/view/Detail\";\r\nimport FeatureProcessCreatePage from \"./pages/feature-process/create/Create\";\r\nimport { SearchContext, SearchContextInterface } from \"./context\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FeatureSearchTemplate } from \"./api/feature/FeatureInterface\";\r\n\r\nconst Loader = () => (\r\n  <div>\r\n    <div>Loading...</div>\r\n  </div>\r\n);\r\n\r\nfunction Main() {\r\n  const { t, i18n } = useTranslation();\r\n  const language = new URLSearchParams(window.location.search).get(\"locale\");\r\n  const [searchId, setSearchId] = useState<string>(\"\");\r\n  const [searchTemplate, setSearchTemplate] = useState<FeatureSearchTemplate>({});\r\n\r\n  const searchFeature: SearchContextInterface = {\r\n    getId(): string {\r\n      return searchId;\r\n    },\r\n    setId(searchId: string) {\r\n      setSearchId(searchId);\r\n    },\r\n    getTemplate(): FeatureSearchTemplate {\r\n      return searchTemplate;\r\n    },\r\n    setTemplate(template: FeatureSearchTemplate): void {\r\n      setSearchTemplate(template);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (language) {\r\n      i18n.changeLanguage(language);\r\n    }\r\n  }, [language]);\r\n\r\n  return (\r\n    <SearchContext.Provider value={searchFeature}>\r\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={SearchPage} />\r\n          <Route path=\"/create\" exact component={CreatePage} />\r\n          <Route path=\"/:featureId/edit\" exact component={EditPage} />\r\n          <Route path=\"/:featureId/detail\" component={DetailPage} />\r\n          <Route path=\"/list\" component={ListPage} />\r\n          <Route path=\"/:featureId/feature-process\" exact component={FeatureProcessListPage} />\r\n          <Route\r\n            path=\"/:featureId/feature-process/:featureProcessId/detail\"\r\n            component={FeatureProcessDetailPage}\r\n          />\r\n          <Route\r\n            path=\"/:featureId/feature-process/create\"\r\n            exact\r\n            component={FeatureProcessCreatePage}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </SearchContext.Provider>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Main />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    backend: {\r\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/translation.json`\r\n    },\r\n    fallbackLng: 'ru-RU',\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />,\r\n  // </React.StrictMode>\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}